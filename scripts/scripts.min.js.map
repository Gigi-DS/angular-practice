{"version":3,"sources":["app.js","config.js","controllers/addarticle.js","controllers/addCust.js","controllers/alert.js","controllers/article.js","controllers/articles.js","controllers/editCustomer.js","controllers/home.js","controllers/partialUpdate.js","controllers/persons.js","controllers/register.js","services/directives.js","services/services.js"],"names":["blogApp","angular","module","controller","$scope","$http","main","Name","Address","config","$routeProvider","when","templateUrl","otherwise","redirectTo","articles","LS","artID","article","id","img","title","short_desc","desc","addArticle","getData","console","log","setId","push","setData","$log","$window","customerData","cust","name","lastname","hobby","age","addCust","newCust","addCustomer","then","data","valid","alert","redirect","location","$timeout","message","$routeParams","get","articleId","orderArticle","removeArticle","i","length","splice","$location","init","getCustomer","customerId","customer","updateCustomer","path","removeData","index","confirm","removeItem","toUrl","query","$filter","refresh","search","sortKey","reverse","pageIndex","pageSize","items","convertModelToVM","persons","totalPages","Math","ceil","count","totalPagesArr","numToArr","e","model","arr","birthday","Date","copy","today","minutes","hours","days","years","round","merge","xPagesLeftRight","Arr","maxPageRightLeft","left","right","sort","n","removeId","quickEdit","reloadPage","reload","keyName","setPage","showCustomer","close","quickSave","c","customerPatch","personId","error","user","directive","restrict","link","scope","element","attrs","on","regform","email","$error","required","$invalid","minlength","password","require","elem","firstPassword","pwCheck","val","$","articleServices","factory","$resource","method","params","isArray","localStorage","Error","setItem","JSON","stringify","parse","getItem","clearData","floor","random","$q","dataLoop","patch","customers","dataLoad","resolve","baseUrl","response","status","staus","statusText","onError","source","schema","type","properties","sortReverse","searchArr","results","toLowerCase","pages","cout","beginWith","getCount","f","findIndex","item","newCustomer","tv4","validateMultiple","lastId","forEach","value","key","getAll","cNew"],"mappings":"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","file":"scripts.min.js","sourcesContent":["/**\n * @author Admin\n */\n\n\nvar blogApp = angular.module('someBlogApp',[\n\t'ngRoute',\n\t'someBlogServices',\n     'ngAnimate'\n]);\n\nblogApp.controller('testCtrl',['$scope','$http', function($scope,$http){\n    $scope.main={\n        Name: 'Gigi',\n        Address: 'Unknown' \n    }; \n}]);\n","/**\n * @author Admin\n */\nblogApp.config(['$routeProvider',function($routeProvider){\n\t$routeProvider.\n\twhen('/',{\n\t\ttemplateUrl: 'app/views/home.html',\n\t\tcontroller: 'homeCtrl'\n\t})\n\t.when('/articles',{\n\t\ttemplateUrl: \"app/views/articles.html\",\n\t\tcontroller: 'articlesCtrl'\n\t})\n\t.when('/article/:articleId',{\n\t\ttemplateUrl: 'app/views/article.html',\n\t\tcontroller: 'articleCtrl'\n\t}).\n\twhen('/register',{\n\t\ttemplateUrl: 'app/views/register.html',\n\t\tcontroller: 'registerCtrl'\n\t})\n    .when('/addarticle',{\n        templateUrl: 'app/views/addarticle.html',\n        controller: 'addArticleCtrl'\n    })\n     .when('/persons',{\n        templateUrl: 'app/views/persons.html',\n        controller: 'personsCtrl'\n    })\n    .when('/addcustomer',{\n        templateUrl: 'app/views/addcustomer.html',\n        controller: \"addCustCtrl\"\n   })\n    .when('/editcustomer/:customerId',{\n        templateUrl: 'app/views/editcustomer.html',\n        controller: \"editCustCtrl\"\n   })\n    .when('/partialupdate',{\n        templateUrl: 'app/views/partialupdate.html',\n        controller: 'partialUpdtCtrl'\n    })\n\t.otherwise({\n\t\tredirectTo:'app/'\n\t});\n}]);","blogApp.controller('addArticleCtrl',['$scope','$http','articles','LS','artID',function($scope,$http,articles,LS,artID){\r\n//    empty new article obj\r\n\t$scope.article={\r\n        id:\"\",\r\n        img:\"\",\r\n        title:\"\",\r\n        short_desc:\"\",\r\n        desc:\"\"\r\n    };\r\n    \r\n    \r\n    $scope.addArticle=function(article){\r\n//        getting all existing articles\r\n        $scope.articles=LS.getData();\r\n        console.log(\"old articles\"+$scope.articles);\r\n        \r\n        //getting id for new article\r\n        $scope.id=artID.setId();\r\n        if($scope.articles.id=$scope.id){\r\n            $scope.id=artID.setId();\r\n        }\r\n//      setting id and img to new article obj\r\n        $scope.article.id=$scope.id;\r\n        $scope.article.img=\"3.jpg\";\r\n//        pushing new article to the rest of article\r\n        $scope.articles=$scope.articles.push(article);\r\n        console.log(\"new articles\"+$scope.articles);\r\n        console.log($scope.article);\r\n        \r\n        LS.setData($scope.articles);\r\n    }\r\n}]);","blogApp.controller(\"addCustCtrl\",['$scope','$log','LS','$window','customerData',function($scope,$log,LS,$window,customerData){\r\n     $scope.cust={id: 0,name: \"\",lastname: \"\",hobby: \"\",age: \"\"};\r\n      \r\n    \r\n    \r\n    $scope.addCust=function(newCust){\r\n     customerData.addCustomer(newCust).then(function(data){\r\n         if(data.valid===false){\r\n            alert(\"Adding new customer error, please check data type\");\r\n         }else{\r\n            $scope.cust=data;\r\n            $window.alert(\"Customer Successeful added!\");\r\n         }\r\n     });\r\n     \r\n    }\r\n    \r\n    $scope.redirect=function(){\r\n         $window.location =\"#/persons\";\r\n    }\r\n}]);","blogApp.controller('alertCtrl',['$scope','$timeout',function($scope,$timeout){\r\n    \r\n    $scope.message=true;\r\n    $timeout(function(){\r\n        $scope.message=false;\r\n    },3000);\r\n    \r\n    \r\n}]);","blogApp.controller('articleCtrl',['$scope','$http','$routeParams','articles',function($scope,$http,$routeParams,articles){\r\n\t$scope.article = articles.get({articleId: $routeParams.articleId});\r\n}]);","blogApp.controller('articlesCtrl',['$scope','$window','$http','articles','LS',function($scope,$window,$http,articles,LS){\r\n//\t$window.alert(\"14\");\r\n//\t $scope.articles=articles.query();\r\n//\t $http.get(\"jsondata/articles.json\").success(function(data){\r\n//\t\t console.log(JSON.stringify(data));\r\n//\t\t LS.setData(data,'articles-storage');\r\n//\t\t $scope.articles=data;\r\n//\t });\r\n//\t\r\n\t// article order\r\n\t $scope.orderArticle='-id';\r\n\t \r\n\t // gettind articles\r\n\t  $scope.articles=LS.getData('articles-storage');\r\n\t  console.log($scope.articles);\r\n\t  \r\n\t  //pagination\r\n//\t$window.alert($scope.articles.id);\r\n   $scope.removeArticle = function(id){\r\n       for( i=$scope.articles.length-1; i>=0; i--) {\r\n            if( $scope.articles[i].id == id) $scope.articles.splice(i,1);\r\n           LS.setData($scope.articles);\r\n       }\r\n   }\r\n\t  \r\n}]);\r\n","blogApp.controller(\"editCustCtrl\",['$scope','$window','$routeParams','$log','$location','customerData',function($scope,$window,$routeParams,$log,$location,customerData){\r\n    $scope.customerId=$routeParams.customerId;\r\n    $scope.customer = {};\r\n    init();\r\n    \r\n    \r\n    \r\n    function init(){\r\n        customerData.getCustomer($scope.customerId).then(function(data){\r\n            \r\n            //data.age= 56;\r\n            $scope.customer=data;\r\n            \r\n        });\r\n        \r\n    }\r\n    \r\n    $scope.updateCustomer=function(customer){\r\n        customerData.updateCustomer(customer).then(function(data){\r\n                if(data.valid===false){\r\n                    $window.alert(\"Error on updating cunstomer, please check type of variables\");\r\n                }else{\r\n                    $window.alert(\"Customer Succesefully Updated\");\r\n                    $location.path(\"/persons\");\r\n                }\r\n        });\r\n    }\r\n    \r\n    //    removing data\r\n   $scope.removeData=function(index){\r\n       // $window.alert(\"remove \"+index);\r\n       if(confirm(\"Sure to DELETE?\")){\r\n            customerData.removeItem(index).then(function(data){\r\n                $location.path(\"/persons\");\r\n            });\r\n            \r\n       }\r\n   }\r\n   \r\n   $scope.redirect=function(toUrl,id){\r\n       if(confirm(\"sure cancel editing?\"))\r\n        $location.path(\"/persons\");\r\n   }\r\n   \r\n}]);","blogApp.controller('homeCtrl',['$scope','$http','articles',function($scope,$http,articles){\r\n\t$scope.articles=articles.query();\r\n}]);","\r\nblogApp.controller('partialUpdtCtrl',['$scope','customerData',function($scope, customerData){\r\n     function getAll(){\r\n        \r\n     }\r\n}]);","////testing merge\r\n//var gigi = {\"id\":1,\"name\":\"Gigi\", \"lastname\":\"DS\", \"hobby\":\"football\", \"age\":\"1987/06/04\"};\r\n//var gigel = {\"id\":1,\"name\":\"Gigel\", \"lastname\":\"DS-MD\", \"hobby\":\"football\", \"age\":\"1987/06/04\"};\r\n//\r\n////var gigle = {\r\n////    id:1,\r\n////    fname:\"gigel\",\r\n////    lname:\"DS-Moldova\",\r\n////    hobby:\"football\",\r\n////    age:\"1987/06/04\r\n////};\r\n//\r\n//console.log(angular.merge({},gigi,gigel));\r\n//\r\n////practice with functiuonal programming\r\n//function test1() {\r\n//    var i = 4;\r\n//   // alert(\"first: \"+i);\r\n//    f = function () {\r\n//        i = i + 1;\r\n//       // alert(\"second: \"+i);\r\n//        return i;\r\n//    }\r\n//    return {\r\n//        exec: f\r\n//    };\r\n//}\r\n//\r\n//\r\n//var fac = test1;\r\n//\r\n//f1 = fac();\r\n//f2 = fac();\r\n//f3 = fac();\r\n//\r\n//\r\n//console.log('f1.1:' + f1.exec());\r\n//console.log('f2.1:' + f2.exec());\r\n//console.log('f3.3:' + f3.exec());\r\n//console.log('f1.2:' + f1.exec());\r\n//console.log('f1.3:' + f1.exec());\r\n//console.log('f3.2:' + f3.exec());\r\n//console.log('f2.2:' + f2.exec());\r\n//\r\n//\r\n//var say = function(name, message){\r\n//    console.log(name+\" say \"+message);\r\n//}\r\n//\r\n//say(\"Gigi\", \"morning\");\r\n//\r\n//say(\"Gigi\",\"morning\",\"third param no to display\");\r\n//\r\n//say(\"gigi\");\r\n//\r\n//\r\n//sayV2=function(name, message){\r\n//    console.log(name+\" say \"+(message || \"nothing at all\"));\r\n//}\r\n//\r\n//sayV2(\"gigi\");\r\n//\r\n////always return something\r\n//sayfunctional=function(name, message){\r\n//    return name+\" say \"+(message || 'nothing at all yo');\r\n//}\r\n//\r\n//console.log(sayfunctional(\"Gigi\"));\r\n//\r\n////finish practice with functional programming\r\n//  var Validate = require('validate-arguments');\r\n//  console.log(Validate);\r\nblogApp.controller('personsCtrl',['$scope','$routeParams','$window','customerData','$log','$location','$filter','$http',function($scope,$routeParams,$window,customerData,$log,$location,$filter,$http){\r\n    //setting empty array for records\r\n\t$scope.persons=[];\r\n    $scope.search = \"\";\r\n    $scope.sortKey = \"id\";\r\n    $scope.reverse = true;\r\n    $scope.pageIndex = 1;\r\n    $scope.pageSize = 5;\r\n    $scope.maxPageRightLeft=2;\r\n    $scope.totalPages = 0;\r\n    $scope.removeId=false;\r\n    $scope.refresh=refresh;\r\n    $scope.quickEdit=false;\r\n  init();\r\n    \r\n    \r\n    \r\n    function init(){\r\n        refresh();\r\n    }\r\n    \r\n    $scope.reloadPage=function(){\r\n        $window.location.reload();\r\n    }\r\n    \r\n    function refresh(){\r\n        customerData.getData($scope.search,$scope.sortKey,$scope.reverse,$scope.pageIndex, $scope.pageSize).then(function(data){\r\n            //console.log(data.status);\r\n            \r\n           //for loop persons convertModelToVM function\r\n            items = data.items;\r\n            for(i=0;i<items.length ; i++)\r\n                items[i] = convertModelToVM(items[i]);\r\n            \r\n            \r\n            $scope.persons = data.items;\r\n            $scope.totalPages = Math.ceil(data.count / $scope.pageSize);\r\n            $scope.totalPagesArr = numToArr($scope.totalPages);\r\n        }).catch(function(e){\r\n            $window.alert(e.message);\r\n        });\r\n    }\r\n      function convertModelToVM(model){\r\n          var arr={};\r\n          var birthday = new Date(model.age);\r\n          arr.birthday = angular.copy(model.age);\r\n          \r\n         var today = new Date($filter('date')(new Date,'yyyy/MM/dd'));\r\n          var age = today - birthday;\r\n          \r\n          var minutes = 1000*60;\r\n          var hours = minutes*60;\r\n          var days = hours*24;\r\n          var years = days*365;\r\n          \r\n          arr.birthday = Math.round(age/years);\r\n          \r\n          \r\n        return angular.merge({},model,arr);\r\n      }\r\n    \r\n    //sort\r\n    $scope.sort=function(keyName){\r\n        if($scope.sortKey!=keyName){\r\n            $scope.sortKey = keyName;\r\n            $scope.reverse = false;\r\n        }else{\r\n             $scope.reverse = !$scope.reverse;\r\n        }\r\n        refresh();\r\n    }\r\n    \r\n    //pagination\r\n    $scope.setPage=function(index){\r\n        $scope.pageIndex = index;\r\n        refresh();\r\n    }\r\n   \r\n    //show customer\r\n    $scope.showCustomer=function(id){\r\n        $scope.quickEdit = true;\r\n        var customer = {};\r\n        for(var i=0; i<$scope.persons.length;i++){\r\n            if($scope.persons[i].id==id){\r\n                customer=angular.copy($scope.persons[i]);\r\n                break;\r\n            }\r\n        }\r\n        return $scope.customer=customer;\r\n    }\r\n    \r\n    $scope.close = function(){\r\n       $scope.customer={};\r\n        $scope.quickEdit = false;\r\n   }\r\n    \r\n    $scope.quickSave=function(c){\r\n        customerData.customerPatch(c).then(function(data){\r\n            if(data.valid===false){\r\n                alert(\"Error on partial udpdate, please check data type!\");\r\n            }else{\r\n                $scope.quickEdit = false;\r\n                $scope.customer={};\r\n                refresh();\r\n            }\r\n            \r\n        });\r\n    }\r\n    \r\n   $scope.redirect=function(toUrl,personId){\r\n       $window.location =toUrl+personId;\r\n   }\r\n   \r\n   \r\n   //x page left and rigth to the current page\r\n  function xPagesLeftRight(Arr){\r\n      //checking if not empty maxPageRightLeft\r\n      if($scope.maxPageRightLeft == null) $scope.maxPageRightLeft = 2;\r\n       var arr=[];\r\n      //setting left pages\r\n        for(i=1;i<=$scope.maxPageRightLeft;i++){\r\n            var left = $scope.pageIndex - i;\r\n            var right = $scope.pageIndex + i;\r\n            if(left>0){\r\n                arr.push(left);\r\n            }\r\n            if(right<=$scope.totalPages)\r\n            arr.push(right);\r\n        }\r\n      \r\n      //setting current page\r\n      arr.push($scope.pageIndex);\r\n      return arr.sort();\r\n   }\r\n   \r\n   \r\n    //from number to array\r\n     function numToArr(n){\r\n        var arr = [];\r\n        for(i =1; i <= n; i++){\r\n            \r\n            arr.push(i);\r\n        }\r\n         xPagesLeftRight(arr);\r\n         return xPagesLeftRight(arr);\r\n    }\r\n    $log.error();\r\n    \r\n\r\n}]); ","blogApp.controller('registerCtrl',['$scope','$http',function($scope,$http){\r\n\t$scope.user={};\r\n}]);","/**\n * @author Admin\n */\nblogApp.directive('someBlogArticles',function(){\n\treturn{\n\t\trestrict: 'A',\n\t\ttemplateUrl: 'app/views/directivetmpl/articles.html'\n\t};\n})\n\n\n.directive(\"someBlogFullArticle\",function(){\n\treturn{\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'app/views/directivetmpl/fullarticle.html'\n\t};\n})\n\n\n.directive('emailRequiredValid',function(){\n\treturn{\n\t\tlink: function(scope, element, attrs){\n\t\t\telement.on(\"blur\",function(){\n\t\t\t\tif(scope.regform.email.$error.required){\n\t\t\t\t\talert(\"field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.email.$invalid && !scope.regform.email.$error.required){\n\t\t\t\t\talert(\"invalid email\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t};\n})\n\n.directive('nameRequired',function(){\n\treturn{\n\t\tlink: function(scope, element, attrs){\n\t\t\telement.on(\"blur\",function(){\n\t\t\t\tif(scope.regform.name.$error.required){\n\t\t\t\t\talert(\"field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.$error.minlength){\n\t\t\t\t\talert('You must enter min. 3 characters');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t};\n})\n\n.directive('passRequired',function(){\n\treturn{\n\t\trestrict: 'A',\n\t\tlink: function(scope,element,attrs){\n\t\t\telement.on('blur',function(){\n\t\t\t\tif(scope.regform.password.$error.required){\n\t\t\t\t\talert(\"this field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.password.$error.minlength){\n\t\t\t\t\talert('You must enter min. 6 characters');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n})\n\n.directive('pwCheck', [function () {\n    return {\n      require: 'ngModel',\n      link: function (scope, elem, attrs) {\n        var firstPassword = '#' + attrs.pwCheck;\n        elem.on('blur', function(){\n        \tif(elem.val()!==$(firstPassword).val()){\n        \t\talert(\"Passwords doesn`t match!\");\n        \t}\n        });\n        \n      }\n    };\n  }]);","var articleServices = angular.module('someBlogServices', ['ngResource']);\r\n\r\narticleServices.factory('articles', ['$resource',\r\n  function($resource){\r\n    return $resource('jsondata/:articleId.json', {}, {\r\n      query: {method:'GET', params:{articleId:'articles'}, isArray:true}\r\n    });\r\n  }]);\r\n  \r\n articleServices.factory(\"LS\",['$window',function($window){\r\n \tinit();\r\n     \r\n     return{\r\n \t\tsetData: function(val,name){\r\n \t\t\t$window.localStorage.setItem(name,JSON.stringify(val));\r\n \t\t},\r\n \t\tgetData: function(name){\r\n \t\t\t return JSON.parse($window.localStorage.getItem(name));\r\n \t\t\t\r\n \t\t},\r\n        clearData: function(name){\r\n            $window.localStorage.removeItem(name);\r\n        }\r\n \t};\r\n     \r\n     function init() {\r\n        if(!$window.localStorage)\r\n                throw new Error('local Storage is not set');\r\n     }\r\n }]);\r\n\r\n articleServices.factory(\"artID\",['$window',function($window){\r\n    return{\r\n        setId: function(){\r\n            return Math.floor((Math.random()*6000)+1);\r\n        }\r\n    }\r\n    \r\n }]);\r\n\r\n articleServices.factory(\"customerData\",[\"$http\",'LS','$q','$filter','$log',function($http,LS,$q,$filter,$log){\r\n     var baseUrl = 'jsondata/articles1.json';\r\n     var dataLoad = null; \r\n//     LS.clearData(\"cutomers\");\r\n     //schma for validation\r\n     schema = {\r\n                \"type\":\"object\",\r\n                \"properties\":{\r\n                    \"id\":{\"type\":\"number\"},\r\n                    \"name\":{\"type\":\"string\"},\r\n                    \"lastname\":{\"type\":\"string\"},\r\n                    \"hobby\":{\"type\":\"string\"},\r\n                    \"age\":{\"type\":\"string\"}\r\n                }\r\n            };\r\n     \r\n    // throw('test');\r\n     init();\r\n     return{ \r\n//         ,sort,direction,pageIndex,pageSize            ,pageIndex,pageSize,sortKey, sortDirection\r\n        getData: function(search,sortKey, sortReverse, pageIndex, pageSize)\r\n        {\r\n            return dataLoad.then(function(data) {\r\n                //console.log(\"from getData: \\n\"+data);\r\n                //total number of pagination\r\n                pages = Math.ceil(data.length / pageSize);\r\n                \r\n                //if isset searc && search module\r\n                if(search){\r\n                  function searchArr(search){\r\n                        var results = [];\r\n                        for(var i=0;i<data.length;i++){\r\n                            if(data[i].id==search || \r\n                               data[i].name.toLowerCase()==search.toLowerCase() || \r\n                               data[i].lastname.toLowerCase()==search.toLowerCase() || \r\n                               data[i].hobby.toLowerCase()==search.toLowerCase())\r\n                                results.push(data[i]);\r\n                        }\r\n                      return results;\r\n                    }\r\n                    data = searchArr(search);\r\n                        \r\n//                    var seachName = $filter('filter')(data,{{name: search} || {lastname: search}},false);\r\n//                   data=seachName;\r\n                }\r\n                var cout = data.length;\r\n//                if isset sort && sortDirection && sort module\r\n                \r\n                if(sortKey){\r\n                    if(!sortReverse) \r\n                        sortKey=\"-\"+sortKey;\r\n                    else \r\n                        sortKey=\"+\"+sortKey;\r\n                    \r\n                    data = $filter('orderBy')(data,sortKey);\r\n                }\r\n                \r\n                //pagination\r\n                //begin with \r\n                beginWith = ((pageIndex-1) * pageSize);\r\n                data = $filter(\"limitTo\")(data,pageSize,beginWith);\r\n              return {\r\n                 items: data,\r\n                count: cout\r\n              };\r\n                \r\n            }\r\n            //ERROR\r\n                          \r\n                                );\r\n        },\r\n         getCount: function(){\r\n            return dataLoad.then(function(data){\r\n                return data.length;\r\n            })\r\n         },\r\n         removeItem: function(removeId){\r\n                //paramater validation\r\n             return dataLoad.then(function(data){\r\n                                 \r\n                     f = data.findIndex(function(item) { return item.id == removeId; });\r\n                     \r\n                     if(f < 0)\r\n                         return false;\r\n                     data.splice(f,1);\r\n                     \r\n                     LS.setData(data,\"cutomers\");\r\n                     \r\n                     return true;\r\n             });\r\n         },\r\n         \r\n         \r\n         \r\n         addCustomer: function(newCustomer){\r\n            return dataLoad.then(function(data){\r\n//                 //validation\r\n                var valid = tv4.validateMultiple(newCustomer, schema);\r\n                if(!valid.valid){\r\n                    return valid;\r\n                }else{\r\n                    data.lastId = 0;\r\n                    id=0;\r\n                    angular.forEach(data,function(value,key){\r\n                        if(value.id >id) id=value.id;\r\n\r\n                    });\r\n                    id=id+1;\r\n                    newCustomer.id=id;\r\n                    data.push(newCustomer);\r\n                    LS.setData(data,\"cutomers\");\r\n                    return angular.copy(newCustomer);   // should return new customer - > id outside\r\n                }\r\n            });\r\n         },\r\n         \r\n         getAll: function(){\r\n            return dataLoad.then(function(data){\r\n                return angular.copy(data);\r\n            })\r\n         },\r\n         \r\n         updateCustomer: function(customer){\r\n            return dataLoad.then(function(data){\r\n                //validation\r\n                var valid = tv4.validateMultiple(customer, schema);\r\n                if(!valid.valid){\r\n                    return valid;\r\n                }else{\r\n                    arr = [];\r\n                    angular.forEach(data,function(value, key){\r\n                        if(value.id!=customer.id) arr.push(value);\r\n                    })\r\n                    arr.push(customer);\r\n                    data=arr;\r\n                    LS.setData(data,\"cutomers\");\r\n                    dataLoad= $q.resolve(data);\r\n                    return arr;\r\n                }\r\n            }).catch(onError);\r\n         },\r\n         \r\n          getCustomer: function(customerId){\r\n            return dataLoad.then(function(data){\r\n                customer={\"id\":customerId};\r\n                customer=dataLoop(data,customer);\r\n                return angular.copy(customer);\r\n            }).catch(onError);\r\n         },\r\n         \r\n         customerPatch: function(c){\r\n            return dataLoad.then(function(data){\r\n                //validation\r\n                var valid = tv4.validateMultiple(c, schema);\r\n                if(!valid.valid){\r\n                    return valid;\r\n                }else{\r\n                    cNew=dataLoop(data,c,true);\r\n                    return cNew;\r\n                }\r\n            });\r\n         }\r\n         \r\n        \r\n}\r\n     function dataLoop(data,c,patch){\r\n        for(var i=0;i<data.length;i++){\r\n            if(data[i].id==c.id)\r\n                break;\r\n        }\r\n         if(patch){\r\n            data[i] = angular.merge({},data[i],c);\r\n            LS.setData(data,\"cutomers\");\r\n         }\r\n        \r\n         return data[i];\r\n     }\r\n     \r\n     function init(){\r\n         customers = LS.getData(\"cutomers\");\r\n         if(customers){\r\n            dataLoad = $q.resolve(customers);\r\n         }\r\n             \r\n         else\r\n             dataLoad = $http.get(baseUrl).then(function(response){\r\n                LS.setData(response.data,\"cutomers\");\r\n                 \r\n                return response.data;\r\n            }).catch(function(e) { throw { status: e.staus, message: e.statusText }});\r\n            dataLoad.catch(onError);\r\n         \r\n         return dataLoad;\r\n         \r\n         \r\n         \r\n     }\r\n     \r\n     function onError(error){\r\n         $log.error();\r\n         \r\n        $log.error({ status: error.status, message: error.message, source: 'customerData'});\r\n     }\r\n     \r\n }]);"],"sourceRoot":"/source/"}