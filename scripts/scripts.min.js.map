{"version":3,"sources":["app.js","config.js","services/directives.js","services/services.js","controllers/addarticle.js","controllers/addCust.js","controllers/alert.js","controllers/article.js","controllers/articles.js","controllers/editCustomer.js","controllers/home.js","controllers/partialUpdate.js","controllers/persons.js","controllers/register.js"],"names":["blogApp","angular","module","controller","$scope","$http","main","Name","Address","config","$routeProvider","when","templateUrl","otherwise","redirectTo","directive","restrict","link","scope","element","attrs","on","regform","email","$error","required","alert","$invalid","name","minlength","password","require","elem","firstPassword","pwCheck","val","$","articleServices","factory","$resource","query","method","params","articleId","isArray","$window","init","localStorage","Error","setData","setItem","JSON","stringify","getData","parse","getItem","clearData","removeItem","setId","Math","floor","random","LS","$q","$filter","$log","findItemById","data","id","i","length","customers","dataLoad","resolve","get","baseUrl","then","response","e","status","staus","message","statusText","onError","error","source","schema","type","properties","lastname","hobby","age","search","sortKey","sortReverse","pageIndex","pageSize","searchArr","results","toLowerCase","push","pages","ceil","cout","beginWith","items","count","getCount","removeId","f","found","some","item","index","splice","console","log","addCustomer","newCustomer","valid","tv4","validateMultiple","lastId","forEach","value","key","copy","getAll","updateCustomer","customer","arr","getCustomer","customerId","customerPatch","c","merge","articles","artID","article","img","title","short_desc","desc","addArticle","customerData","cust","addCust","newCust","redirect","location","$timeout","$routeParams","orderArticle","removeArticle","$location","path","removeData","confirm","toUrl","refresh","reverse","convertModelToVM","persons","totalPages","totalPagesArr","numToArr","model","birthday","Date","today","minutes","hours","days","years","round","xPagesLeftRight","Arr","maxPageRightLeft","left","right","sort","n","quickEdit","reloadPage","reload","keyName","setPage","showCustomer","close","quickSave","personId","user"],"mappings":"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","file":"scripts.min.js","sourcesContent":["/**\n * @author Admin\n */\n\n\nvar blogApp = angular.module('someBlogApp',[\n\t'ngRoute',\n\t'someBlogServices',\n     'ngAnimate'\n]);\n\nblogApp.controller('testCtrl',['$scope','$http', function($scope,$http){\n    $scope.main={\n        Name: 'Gigi',\n        Address: 'Unknown' \n    }; \n}]);\n","/**\n * @author Admin\n */\nblogApp.config(['$routeProvider',function($routeProvider){\n\t$routeProvider.\n\twhen('/',{\n\t\ttemplateUrl: 'app/views/home.html',\n\t\tcontroller: 'homeCtrl'\n\t})\n\t.when('/articles',{\n\t\ttemplateUrl: \"app/views/articles.html\",\n\t\tcontroller: 'articlesCtrl'\n\t})\n\t.when('/article/:articleId',{\n\t\ttemplateUrl: 'app/views/article.html',\n\t\tcontroller: 'articleCtrl'\n\t}).\n\twhen('/register',{\n\t\ttemplateUrl: 'app/views/register.html',\n\t\tcontroller: 'registerCtrl'\n\t})\n    .when('/addarticle',{\n        templateUrl: 'app/views/addarticle.html',\n        controller: 'addArticleCtrl'\n    })\n     .when('/persons',{\n        templateUrl: 'app/views/persons.html',\n        controller: 'personsCtrl'\n    })\n    .when('/addcustomer',{\n        templateUrl: 'app/views/addcustomer.html',\n        controller: \"addCustCtrl\"\n   })\n    .when('/editcustomer/:customerId',{\n        templateUrl: 'app/views/editcustomer.html',\n        controller: \"editCustCtrl\"\n   })\n    .when('/partialupdate',{\n        templateUrl: 'app/views/partialupdate.html',\n        controller: 'partialUpdtCtrl'\n    })\n\t.otherwise({\n\t\tredirectTo:'app/'\n\t});\n}]);","/**\n * @author Admin\n */\nblogApp.directive('someBlogArticles',function(){\n\treturn{\n\t\trestrict: 'A',\n\t\ttemplateUrl: 'app/views/directivetmpl/articles.html'\n\t};\n})\n\n\n.directive(\"someBlogFullArticle\",function(){\n\treturn{\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'app/views/directivetmpl/fullarticle.html'\n\t};\n})\n\n\n.directive('emailRequiredValid',function(){\n\treturn{\n\t\tlink: function(scope, element, attrs){\n\t\t\telement.on(\"blur\",function(){\n\t\t\t\tif(scope.regform.email.$error.required){\n\t\t\t\t\talert(\"field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.email.$invalid && !scope.regform.email.$error.required){\n\t\t\t\t\talert(\"invalid email\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t};\n})\n\n.directive('nameRequired',function(){\n\treturn{\n\t\tlink: function(scope, element, attrs){\n\t\t\telement.on(\"blur\",function(){\n\t\t\t\tif(scope.regform.name.$error.required){\n\t\t\t\t\talert(\"field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.$error.minlength){\n\t\t\t\t\talert('You must enter min. 3 characters');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t};\n})\n\n.directive('passRequired',function(){\n\treturn{\n\t\trestrict: 'A',\n\t\tlink: function(scope,element,attrs){\n\t\t\telement.on('blur',function(){\n\t\t\t\tif(scope.regform.password.$error.required){\n\t\t\t\t\talert(\"this field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.password.$error.minlength){\n\t\t\t\t\talert('You must enter min. 6 characters');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n})\n\n.directive('pwCheck', [function () {\n    return {\n      require: 'ngModel',\n      link: function (scope, elem, attrs) {\n        var firstPassword = '#' + attrs.pwCheck;\n        elem.on('blur', function(){\n        \tif(elem.val()!==$(firstPassword).val()){\n        \t\talert(\"Passwords doesn`t match!\");\n        \t}\n        });\n        \n      }\n    };\n  }]);","var articleServices = angular.module('someBlogServices', ['ngResource']);\r\n\r\narticleServices.factory('articles', ['$resource',\r\n  function($resource){\r\n    return $resource('jsondata/:articleId.json', {}, {\r\n      query: {method:'GET', params:{articleId:'articles'}, isArray:true}\r\n    });\r\n  }]);\r\n  \r\n articleServices.factory(\"LS\",['$window',function($window){\r\n \tinit();\r\n     \r\n     return{\r\n \t\tsetData: function(val,name){\r\n \t\t\t$window.localStorage.setItem(name,JSON.stringify(val));\r\n \t\t},\r\n \t\tgetData: function(name){\r\n \t\t\t return JSON.parse($window.localStorage.getItem(name));\r\n \t\t\t\r\n \t\t},\r\n        clearData: function(name){\r\n            $window.localStorage.removeItem(name);\r\n        }\r\n \t};\r\n     \r\n     function init() {\r\n        if(!$window.localStorage)\r\n                throw new Error('local Storage is not set');\r\n     }\r\n }]);\r\n\r\n articleServices.factory(\"artID\",['$window',function($window){\r\n    return{\r\n        setId: function(){\r\n            return Math.floor((Math.random()*6000)+1);\r\n        }\r\n    }\r\n }]);\r\n\r\n articleServices.factory(\"customerData\",[\"$http\",'LS','$q','$filter','$log',function($http,LS,$q,$filter,$log){\r\n     var baseUrl = 'jsondata/articles1.json';\r\n     var dataLoad = null; \r\n//    LS.clearData(\"cutomers\");\r\n     //schma for validation\r\n     schema = {\r\n                \"type\":\"object\",\r\n                \"properties\":{\r\n                    \"id\":{\"type\":\"number\"},\r\n                    \"name\":{\"type\":\"string\"},\r\n                    \"lastname\":{\"type\":\"string\"},\r\n                    \"hobby\":{\"type\":\"string\"},\r\n                    \"age\":{\"type\":\"string\"}\r\n                }\r\n            };\r\n     \r\n    // throw('test');\r\n     init();\r\n     return{ \r\n//         ,sort,direction,pageIndex,pageSize            ,pageIndex,pageSize,sortKey, sortDirection\r\n        getData: function(search,sortKey, sortReverse, pageIndex, pageSize)\r\n        {\r\n            return dataLoad.then(function(data) {\r\n                //console.log(\"from getData: \\n\"+data);\r\n                //total number of pagination\r\n                pages = Math.ceil(data.length / pageSize);\r\n                \r\n                //if isset searc && search module\r\n                if(search){\r\n                  function searchArr(search){\r\n                        var results = [];\r\n                        for(var i=0;i<data.length;i++){\r\n                            if(data[i].id==search || \r\n                               data[i].name.toLowerCase()==search.toLowerCase() || \r\n                               data[i].lastname.toLowerCase()==search.toLowerCase() || \r\n                               data[i].hobby.toLowerCase()==search.toLowerCase())\r\n                                results.push(data[i]);\r\n                        }\r\n                      return results;\r\n                    }\r\n                    data = searchArr(search);\r\n                        \r\n//                    var seachName = $filter('filter')(data,{{name: search} || {lastname: search}},false);\r\n//                   data=seachName;\r\n                }\r\n                var cout = data.length;\r\n//                if isset sort && sortDirection && sort module\r\n                \r\n                if(sortKey){\r\n                    if(!sortReverse) \r\n                        sortKey=\"-\"+sortKey;\r\n                    else \r\n                        sortKey=\"+\"+sortKey;\r\n                    \r\n                    data = $filter('orderBy')(data,sortKey);\r\n                }\r\n                \r\n                //pagination\r\n                //begin with \r\n                beginWith = ((pageIndex-1) * pageSize);\r\n                data = $filter(\"limitTo\")(data,pageSize,beginWith);\r\n              return {\r\n                 items: data,\r\n                count: cout\r\n              };\r\n                \r\n            }\r\n            //ERROR\r\n                          \r\n                                );\r\n        },\r\n         getCount: function(){\r\n            return dataLoad.then(function(data){\r\n                return data.length;\r\n            })\r\n         },\r\n         removeItem: function(removeId){\r\n                //paramater validation\r\n             return dataLoad.then(function(data){\r\n\r\n                 var f;\r\n                 var found = data.some(function(item, index) { f = index; return item.id == removeId; });\r\n\r\n                 if (!found) {\r\n                     return false;\r\n                 }\r\n\r\n                 data.splice(f, 1);\r\n                 console.log(data);\r\n                 \r\n                     LS.setData(data,\"cutomers\");\r\n                     \r\n                     return true;\r\n             });\r\n         },\r\n         \r\n         \r\n         \r\n         addCustomer: function(newCustomer){\r\n             var valid = tv4.validateMultiple(newCustomer, schema);\r\n                if(!valid.valid){\r\n                    return valid;\r\n                }else{\r\n                    return dataLoad.then(function(data){\r\n                     //validation\r\n                        data.lastId = 0;\r\n                        id=0;\r\n                        angular.forEach(data,function(value,key){\r\n                            if(value.id >id) id=value.id;\r\n\r\n                        });\r\n                        id=id+1;\r\n                        newCustomer.id=id;\r\n                        data.push(newCustomer);\r\n                        LS.setData(data,\"cutomers\");\r\n                        return angular.copy(newCustomer);   // should return new customer - > id outside\r\n            })};\r\n         },\r\n         \r\n         getAll: function(){\r\n            return dataLoad.then(function(data){\r\n                return angular.copy(data);\r\n            })\r\n         },\r\n         \r\n         updateCustomer: function(customer){\r\n            return dataLoad.then(function(data){\r\n                //validation\r\n                var valid = tv4.validateMultiple(customer, schema);\r\n                if(!valid.valid){\r\n                    return valid;\r\n                }else{\r\n                    arr = [];\r\n                    angular.forEach(data,function(value, key){\r\n                        if(value.id!=customer.id) arr.push(value);\r\n                    })\r\n                    arr.push(customer);\r\n                    data=arr;\r\n                    LS.setData(data,\"cutomers\");\r\n                    dataLoad= $q.resolve(data);\r\n                    return angular.copy(arr);\r\n                }\r\n            })\r\n         },\r\n         \r\n          getCustomer: function(customerId){\r\n            return dataLoad.then(function(data){\r\n                customer={};\r\n                customer=findItemById(data,customerId);\r\n                return angular.copy(customer);\r\n            })\r\n         },\r\n         \r\n         customerPatch: function(c){\r\n            return dataLoad.then(function(data){\r\n                //validation\r\n                var valid = tv4.validateMultiple(c, schema);\r\n               // console.log(valid);\r\n                if(!valid.valid){\r\n                    return valid;\r\n                }else{\r\n                   // console.log(angular.merge({},findItemById(data,c.id),c));\r\n                    angular.merge(findItemById(data,c.id),c);\r\n                    console.log(data);\r\n                    LS.setData(data,\"cutomers\");\r\n                    return c;\r\n                }\r\n            });\r\n         }\r\n         \r\n        \r\n}\r\n     function findItemById(data,id){\r\n        for(var i=0;i<data.length;i++){\r\n            if(data[i].id==id)\r\n                break;\r\n        }\r\n         return data[i];\r\n     }\r\n     \r\n     function init(){\r\n         customers = LS.getData(\"cutomers\");\r\n         if(customers){\r\n            dataLoad = $q.resolve(customers);\r\n         }\r\n         else\r\n             dataLoad = $http.get(baseUrl).then(function(response){\r\n                LS.setData(response.data,\"cutomers\");\r\n                return response.data;\r\n            }).catch(function(e) { throw { status: e.staus, message: e.statusText }});\r\n            dataLoad.catch(onError);\r\n         return dataLoad;\r\n     }\r\n     \r\n     function onError(error){\r\n        $log.error(error);\r\n         $log.error({ status: error.status, message: error.message, source: 'customerData'});\r\n     }\r\n     \r\n }]);","blogApp.controller('addArticleCtrl',['$scope','$http','articles','LS','artID',function($scope,$http,articles,LS,artID){\r\n//    empty new article obj\r\n\t$scope.article={\r\n        id:\"\",\r\n        img:\"\",\r\n        title:\"\",\r\n        short_desc:\"\",\r\n        desc:\"\"\r\n    };\r\n    \r\n    \r\n    $scope.addArticle=function(article){\r\n//        getting all existing articles\r\n        $scope.articles=LS.getData();\r\n        console.log(\"old articles\"+$scope.articles);\r\n        \r\n        //getting id for new article\r\n        $scope.id=artID.setId();\r\n        if($scope.articles.id=$scope.id){\r\n            $scope.id=artID.setId();\r\n        }\r\n//      setting id and img to new article obj\r\n        $scope.article.id=$scope.id;\r\n        $scope.article.img=\"3.jpg\";\r\n//        pushing new article to the rest of article\r\n        $scope.articles=$scope.articles.push(article);\r\n        console.log(\"new articles\"+$scope.articles);\r\n        console.log($scope.article);\r\n        \r\n        LS.setData($scope.articles);\r\n    }\r\n}]);","blogApp.controller(\"addCustCtrl\",['$scope','$log','LS','$window','customerData',function($scope,$log,LS,$window,customerData){\r\n     $scope.cust={id: 0,name: \"\",lastname: \"\",hobby: \"\",age: \"\"};\r\n      \r\n    \r\n    \r\n    $scope.addCust=function(newCust){\r\n     customerData.addCustomer(newCust).then(function(data){\r\n         if(data.valid===false){\r\n            alert(\"Adding new customer error, please check data type\");\r\n         }else{\r\n            $scope.cust=data;\r\n            $window.alert(\"Customer Successeful added!\");\r\n         }\r\n     });\r\n     \r\n    }\r\n    \r\n    $scope.redirect=function(){\r\n         $window.location =\"#/persons\";\r\n    }\r\n}]);","blogApp.controller('alertCtrl',['$scope','$timeout',function($scope,$timeout){\r\n    \r\n    $scope.message=true;\r\n    $timeout(function(){\r\n        $scope.message=false;\r\n    },3000);\r\n    \r\n    \r\n}]);","blogApp.controller('articleCtrl',['$scope','$http','$routeParams','articles',function($scope,$http,$routeParams,articles){\r\n\t$scope.article = articles.get({articleId: $routeParams.articleId});\r\n}]);","blogApp.controller('articlesCtrl',['$scope','$window','$http','articles','LS',function($scope,$window,$http,articles,LS){\r\n//\t$window.alert(\"14\");\r\n//\t $scope.articles=articles.query();\r\n//\t $http.get(\"jsondata/articles.json\").success(function(data){\r\n//\t\t console.log(JSON.stringify(data));\r\n//\t\t LS.setData(data,'articles-storage');\r\n//\t\t $scope.articles=data;\r\n//\t });\r\n//\t\r\n\t// article order\r\n\t $scope.orderArticle='-id';\r\n\t \r\n\t // gettind articles\r\n\t  $scope.articles=LS.getData('articles-storage');\r\n\t  console.log($scope.articles);\r\n\t  \r\n\t  //pagination\r\n//\t$window.alert($scope.articles.id);\r\n   $scope.removeArticle = function(id){\r\n       for( i=$scope.articles.length-1; i>=0; i--) {\r\n            if( $scope.articles[i].id == id) $scope.articles.splice(i,1);\r\n           LS.setData($scope.articles);\r\n       }\r\n   }\r\n\t  \r\n}]);\r\n","blogApp.controller(\"editCustCtrl\",['$scope','$window','$routeParams','$log','$location','customerData',function($scope,$window,$routeParams,$log,$location,customerData){\r\n    $scope.customerId=$routeParams.customerId;\r\n    $scope.customer = {};\r\n    init();\r\n    \r\n    \r\n    \r\n    function init(){\r\n        customerData.getCustomer($scope.customerId).then(function(data){\r\n            \r\n            //data.age= 56;\r\n            $scope.customer=data;\r\n            \r\n        });\r\n        \r\n    }\r\n    \r\n    $scope.updateCustomer=function(customer){\r\n        customerData.updateCustomer(customer).then(function(data){\r\n                if(data.valid===false){\r\n                    $window.alert(\"Error on updating cunstomer, please check type of variables\");\r\n                }else{\r\n                    $window.alert(\"Customer Succesefully Updated\");\r\n                    $location.path(\"/persons\");\r\n                }\r\n        });\r\n    }\r\n    \r\n    //    removing data\r\n   $scope.removeData=function(index){\r\n       // $window.alert(\"remove \"+index);\r\n       if(confirm(\"Sure to DELETE?\")){\r\n            customerData.removeItem(index).then(function(data){\r\n                $location.path(\"/persons\");\r\n            });\r\n            \r\n       }\r\n   }\r\n   \r\n   $scope.redirect=function(toUrl,id){\r\n       if(confirm(\"sure cancel editing?\"))\r\n        $location.path(\"/persons\");\r\n   }\r\n   \r\n}]);","blogApp.controller('homeCtrl',['$scope','$http','articles',function($scope,$http,articles){\r\n\t$scope.articles=articles.query();\r\n}]);","\r\nblogApp.controller('partialUpdtCtrl',['$scope','customerData',function($scope, customerData){\r\n     function getAll(){\r\n        \r\n     }\r\n}]);","////testing merge\r\n//var gigi = {\"id\":1,\"name\":\"Gigi\", \"lastname\":\"DS\", \"hobby\":\"football\", \"age\":\"1987/06/04\"};\r\n//var gigel = {\"id\":1,\"name\":\"Gigel\", \"lastname\":\"DS-MD\", \"hobby\":\"football\", \"age\":\"1987/06/04\"};\r\n//\r\n////var gigle = {\r\n////    id:1,\r\n////    fname:\"gigel\",\r\n////    lname:\"DS-Moldova\",\r\n////    hobby:\"football\",\r\n////    age:\"1987/06/04\r\n////};\r\n//\r\n//console.log(angular.merge({},gigi,gigel));\r\n//\r\n////practice with functiuonal programming\r\n//function test1() {\r\n//    var i = 4;\r\n//   // alert(\"first: \"+i);\r\n//    f = function () {\r\n//        i = i + 1;\r\n//       // alert(\"second: \"+i);\r\n//        return i;\r\n//    }\r\n//    return {\r\n//        exec: f\r\n//    };\r\n//}\r\n//\r\n//\r\n//var fac = test1;\r\n//\r\n//f1 = fac();\r\n//f2 = fac();\r\n//f3 = fac();\r\n//\r\n//\r\n//console.log('f1.1:' + f1.exec());\r\n//console.log('f2.1:' + f2.exec());\r\n//console.log('f3.3:' + f3.exec());\r\n//console.log('f1.2:' + f1.exec());\r\n//console.log('f1.3:' + f1.exec());\r\n//console.log('f3.2:' + f3.exec());\r\n//console.log('f2.2:' + f2.exec());\r\n//\r\n//\r\n//var say = function(name, message){\r\n//    console.log(name+\" say \"+message);\r\n//}\r\n//\r\n//say(\"Gigi\", \"morning\");\r\n//\r\n//say(\"Gigi\",\"morning\",\"third param no to display\");\r\n//\r\n//say(\"gigi\");\r\n//\r\n//\r\n//sayV2=function(name, message){\r\n//    console.log(name+\" say \"+(message || \"nothing at all\"));\r\n//}\r\n//\r\n//sayV2(\"gigi\");\r\n//\r\n////always return something\r\n//sayfunctional=function(name, message){\r\n//    return name+\" say \"+(message || 'nothing at all yo');\r\n//}\r\n//\r\n//console.log(sayfunctional(\"Gigi\"));\r\n//\r\n////finish practice with functional programming\r\n//  var Validate = require('validate-arguments');\r\n//  console.log(Validate);\r\nblogApp.controller('personsCtrl',['$scope','$routeParams','$window','customerData','$log','$location','$filter','$http',function($scope,$routeParams,$window,customerData,$log,$location,$filter,$http){\r\n    //setting empty array for records\r\n\t$scope.persons=[];\r\n    $scope.search = \"\";\r\n    $scope.sortKey = \"id\";\r\n    $scope.reverse = true;\r\n    $scope.pageIndex = 1;\r\n    $scope.pageSize = 5;\r\n    $scope.maxPageRightLeft=2;\r\n    $scope.totalPages = 0;\r\n    $scope.removeId=false;\r\n    $scope.refresh=refresh;\r\n    $scope.quickEdit=false;\r\n  init();\r\n    \r\n    \r\n    \r\n    function init(){\r\n        refresh();\r\n    }\r\n    \r\n    $scope.reloadPage=function(){\r\n        $window.location.reload();\r\n    }\r\n    \r\n    function refresh(){\r\n        customerData.getData($scope.search,$scope.sortKey,$scope.reverse,$scope.pageIndex, $scope.pageSize).then(function(data){\r\n            //console.log(data.status);\r\n            \r\n           //for loop persons convertModelToVM function\r\n            items = data.items;\r\n            for(i=0;i<items.length ; i++)\r\n                items[i] = convertModelToVM(items[i]);\r\n            \r\n            \r\n            $scope.persons = data.items;\r\n            $scope.totalPages = Math.ceil(data.count / $scope.pageSize);\r\n            $scope.totalPagesArr = numToArr($scope.totalPages);\r\n        }).catch(function(e){\r\n            $window.alert(e.message);\r\n        });\r\n    }\r\n      function convertModelToVM(model){\r\n          var arr={};\r\n          var birthday = new Date(model.age);\r\n          arr.birthday = angular.copy(model.age);\r\n          \r\n         var today = new Date($filter('date')(new Date,'yyyy/MM/dd'));\r\n          var age = today - birthday;\r\n          \r\n          var minutes = 1000*60;\r\n          var hours = minutes*60;\r\n          var days = hours*24;\r\n          var years = days*365;\r\n          \r\n          arr.birthday = Math.round(age/years);\r\n          \r\n          \r\n        return angular.merge({},model,arr);\r\n      }\r\n    \r\n    //sort\r\n    $scope.sort=function(keyName){\r\n        if($scope.sortKey!=keyName){\r\n            $scope.sortKey = keyName;\r\n            $scope.reverse = false;\r\n        }else{\r\n             $scope.reverse = !$scope.reverse;\r\n        }\r\n        refresh();\r\n    }\r\n    \r\n    //pagination\r\n    $scope.setPage=function(index){\r\n        $scope.pageIndex = index;\r\n        refresh();\r\n    }\r\n   \r\n    //show customer\r\n    $scope.showCustomer=function(id){\r\n        $scope.quickEdit = true;\r\n        var customer = {};\r\n        for(var i=0; i<$scope.persons.length;i++){\r\n            if($scope.persons[i].id==id){\r\n                customer=angular.copy($scope.persons[i]);\r\n                break;\r\n            }\r\n        }\r\n        return $scope.customer=customer;\r\n    }\r\n    \r\n    $scope.close = function(){\r\n       $scope.customer={};\r\n        $scope.quickEdit = false;\r\n   }\r\n    \r\n    $scope.quickSave=function(c){\r\n        customerData.customerPatch(c).then(function(data){\r\n            //console.log(data);\r\n            if(data.valid===false){\r\n                alert(\"Error on partial udpdate, please check data type!\");\r\n            }else{\r\n                $scope.quickEdit = false;\r\n                $scope.customer={};\r\n                refresh();\r\n            }\r\n            \r\n        });\r\n    }\r\n    \r\n   $scope.redirect=function(toUrl,personId){\r\n       $window.location =toUrl+personId;\r\n   }\r\n   \r\n   \r\n   //x page left and rigth to the current page\r\n  function xPagesLeftRight(Arr){\r\n      //checking if not empty maxPageRightLeft\r\n      if($scope.maxPageRightLeft == null) $scope.maxPageRightLeft = 2;\r\n       var arr=[];\r\n      //setting left pages\r\n        for(i=1;i<=$scope.maxPageRightLeft;i++){\r\n            var left = $scope.pageIndex - i;\r\n            var right = $scope.pageIndex + i;\r\n            if(left>0){\r\n                arr.push(left);\r\n            }\r\n            if(right<=$scope.totalPages)\r\n            arr.push(right);\r\n        }\r\n      \r\n      //setting current page\r\n      arr.push($scope.pageIndex);\r\n      return arr.sort();\r\n   }\r\n   \r\n   \r\n    //from number to array\r\n     function numToArr(n){\r\n        var arr = [];\r\n        for(i =1; i <= n; i++){\r\n            \r\n            arr.push(i);\r\n        }\r\n         xPagesLeftRight(arr);\r\n         return xPagesLeftRight(arr);\r\n    }\r\n    $log.error();\r\n    \r\n\r\n}]); ","blogApp.controller('registerCtrl',['$scope','$http',function($scope,$http){\r\n\t$scope.user={};\r\n}]);"],"sourceRoot":"/source/"}