{"version":3,"sources":["app.js","config.js","controllers/addarticle.js","controllers/addCust.js","controllers/article.js","controllers/articles.js","controllers/editCustomer.js","controllers/home.js","controllers/persons.js","controllers/register.js","services/directives.js","services/services.js"],"names":["blogApp","angular","module","controller","$scope","$http","main","Name","Address","config","$routeProvider","when","templateUrl","otherwise","redirectTo","articles","LS","artID","article","id","img","title","short_desc","desc","addArticle","getData","console","log","setId","push","setData","$log","$window","customerData","cust","name","lastname","hobby","age","addCust","newCust","addCustomer","then","data","alert","$routeParams","get","articleId","orderArticle","removeArticle","i","length","splice","$location","init","getCustomer","customerId","customer","updateCustomer","path","query","refresh","search","sortKey","sortReverse","pageIndex","pageSize","persons","items","totalPages","Math","ceil","count","numToArr","n","arr","removeId","sort","keyName","setPage","index","removeData","confirm","removeItem","user","directive","restrict","link","scope","element","attrs","on","regform","email","$error","required","$invalid","minlength","password","require","elem","firstPassword","pwCheck","val","$","articleServices","factory","$resource","method","params","isArray","localStorage","Error","setItem","JSON","stringify","parse","getItem","clearData","floor","random","$q","$filter","customers","dataLoad","resolve","baseUrl","response","searchData","seachName","searchLastName","searchHobby","searchId","resultData","concat","filteredResults","filter","item","pos","indexOf","pages","cout","beginWith","getCount","$$state","value","customerArr","forEach","key","test1","test","newCustomer"],"mappings":"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","file":"scripts.min.js","sourcesContent":["/**\n * @author Admin\n */\nvar blogApp = angular.module('someBlogApp',[\n\t'ngRoute',\n\t'someBlogServices',\n\t'angularUtils.directives.dirPagination'\n]);\n\nblogApp.controller('testCtrl',['$scope','$http', function($scope,$http){\n    $scope.main={\n        Name: 'Gigi',\n        Address: 'Unknown' \n    }; \n}]);\n","/**\n * @author Admin\n */\nblogApp.config(['$routeProvider',function($routeProvider){\n\t$routeProvider.\n\twhen('/',{\n\t\ttemplateUrl: 'app/views/home.html',\n\t\tcontroller: 'homeCtrl'\n\t})\n\t.when('/articles',{\n\t\ttemplateUrl: \"app/views/articles.html\",\n\t\tcontroller: 'articlesCtrl'\n\t})\n\t.when('/article/:articleId',{\n\t\ttemplateUrl: 'app/views/article.html',\n\t\tcontroller: 'articleCtrl'\n\t}).\n\twhen('/register',{\n\t\ttemplateUrl: 'app/views/register.html',\n\t\tcontroller: 'registerCtrl'\n\t})\n    .when('/addarticle',{\n        templateUrl: 'app/views/addarticle.html',\n        controller: 'addArticleCtrl'\n    })\n     .when('/persons',{\n        templateUrl: 'app/views/persons.html',\n        controller: 'personsCtrl'\n    })\n    .when('/addcustomer',{\n        templateUrl: 'app/views/addcustomer.html',\n        controller: \"addCustCtrl\"\n   })\n    .when('/editcustomer/:customerId',{\n        templateUrl: 'app/views/editcustomer.html',\n        controller: \"editCustCtrl\"\n   })\n\t.otherwise({\n\t\tredirectTo:'app/'\n\t});\n}]);","blogApp.controller('addArticleCtrl',['$scope','$http','articles','LS','artID',function($scope,$http,articles,LS,artID){\r\n//    empty new article obj\r\n\t$scope.article={\r\n        id:\"\",\r\n        img:\"\",\r\n        title:\"\",\r\n        short_desc:\"\",\r\n        desc:\"\"\r\n    };\r\n    \r\n    \r\n    $scope.addArticle=function(article){\r\n//        getting all existing articles\r\n        $scope.articles=LS.getData();\r\n        console.log(\"old articles\"+$scope.articles);\r\n        \r\n        //getting id for new article\r\n        $scope.id=artID.setId();\r\n        if($scope.articles.id=$scope.id){\r\n            $scope.id=artID.setId();\r\n        }\r\n//      setting id and img to new article obj\r\n        $scope.article.id=$scope.id;\r\n        $scope.article.img=\"3.jpg\";\r\n//        pushing new article to the rest of article\r\n        $scope.articles=$scope.articles.push(article);\r\n        console.log(\"new articles\"+$scope.articles);\r\n        console.log($scope.article);\r\n        \r\n        LS.setData($scope.articles);\r\n    }\r\n}]);","blogApp.controller(\"addCustCtrl\",['$scope','$log','LS','$window','customerData',function($scope,$log,LS,$window,customerData){\r\n     $scope.cust={id: 0,name: \"\",lastname: \"\",hobby: \"\",age: \"\"};\r\n      \r\n    \r\n    \r\n    $scope.addCust=function(newCust){\r\n     customerData.addCustomer(newCust).then(function(data){\r\n       $scope.cust=data;\r\n        $window.alert(\"Customer Successeful added!\");\r\n     });\r\n     \r\n    }\r\n    \r\n    \r\n}]);","blogApp.controller('articleCtrl',['$scope','$http','$routeParams','articles',function($scope,$http,$routeParams,articles){\r\n\t$scope.article = articles.get({articleId: $routeParams.articleId});\r\n}]);","blogApp.controller('articlesCtrl',['$scope','$window','$http','articles','LS',function($scope,$window,$http,articles,LS){\r\n//\t$window.alert(\"14\");\r\n//\t $scope.articles=articles.query();\r\n//\t $http.get(\"jsondata/articles.json\").success(function(data){\r\n//\t\t console.log(JSON.stringify(data));\r\n//\t\t LS.setData(data,'articles-storage');\r\n//\t\t $scope.articles=data;\r\n//\t });\r\n//\t\r\n\t// article order\r\n\t $scope.orderArticle='-id';\r\n\t \r\n\t // gettind articles\r\n\t  $scope.articles=LS.getData('articles-storage');\r\n\t  console.log($scope.articles);\r\n\t  \r\n\t  //pagination\r\n//\t$window.alert($scope.articles.id);\r\n   $scope.removeArticle = function(id){\r\n       for( i=$scope.articles.length-1; i>=0; i--) {\r\n            if( $scope.articles[i].id == id) $scope.articles.splice(i,1);\r\n           LS.setData($scope.articles);\r\n       }\r\n   }\r\n\t  \r\n}]);\r\n","blogApp.controller(\"editCustCtrl\",['$scope','$window','$routeParams','$log','$location','customerData',function($scope,$window,$routeParams,$log,$location,customerData){\r\n    $scope.customerId=$routeParams.customerId;\r\n    $scope.customer = {};\r\n    init();\r\n    \r\n    \r\n    \r\n    \r\n    function init(){\r\n        customerData.getCustomer($scope.customerId).then(function(data){\r\n            $scope.customer=data;\r\n        });\r\n        \r\n    }\r\n    \r\n    $scope.updateCustomer=function(customer){\r\n        customerData.updateCustomer(customer).then(function(data){\r\n            if(data) {\r\n                $window.alert(\"Customer Succesefully Updated\");\r\n                $location.path(\"/persons\");\r\n            }\r\n        });\r\n    }\r\n}]);","blogApp.controller('homeCtrl',['$scope','$http','articles',function($scope,$http,articles){\r\n\t$scope.articles=articles.query();\r\n}]);","blogApp.controller('personsCtrl',['$scope','$routeParams','$window','customerData','$log',function($scope,$routeParams,$window,customerData,$log){\r\n   \r\n    //setting empty array for records\r\n\t$scope.persons=[];\r\n    $scope.search = \"\";\r\n    $scope.sortKey = \"id\";\r\n    $scope.sortReverse = true;\r\n    $scope.pageIndex = 1;\r\n    $scope.pageSize = 5;\r\n    $scope.totalPages = 0;\r\n    $scope.removeId=false;\r\n    $scope.refresh=refresh;\r\n    \r\n  init();\r\n    \r\n    \r\n    \r\n    function init(){\r\n        refresh();\r\n    }\r\n    function refresh(){\r\n        customerData.getData($scope.search,$scope.sortKey,$scope.sortReverse,$scope.pageIndex, $scope.pageSize).then(function(data){\r\n           $scope.persons = data.items;\r\n            $scope.totalPages = Math.ceil(data.count / $scope.pageSize);\r\n            $scope.totalPages = numToArr($scope.totalPages);\r\n        });\r\n    }\r\n      \r\n    //sort\r\n    $scope.sort=function(keyName){\r\n        if($scope.sortKey!=keyName){\r\n            $scope.sortKey = keyName;\r\n            $scope.sortReverse = false;\r\n        }else{\r\n             $scope.sortReverse = !$scope.sortReverse;\r\n        }\r\n        refresh();\r\n    }\r\n    \r\n    //pagination\r\n    $scope.setPage=function(index){\r\n        $scope.pageIndex = index;\r\n        refresh();\r\n    }\r\n   \r\n//    removing data\r\n   $scope.removeData=function(index){\r\n       // $window.alert(\"remove \"+index);\r\n       if(confirm(\"Sure to DELETE?\")){\r\n            customerData.removeItem(index);\r\n            refresh();\r\n       }\r\n   }\r\n    \r\n    //from number to array\r\n     function numToArr(n){\r\n        var arr = [];\r\n        for(i =1; i <= n; i++){\r\n            arr.push(i);\r\n        }\r\n         return arr;\r\n    }\r\n}]); ","blogApp.controller('registerCtrl',['$scope','$http',function($scope,$http){\r\n\t$scope.user={};\r\n}]);","/**\n * @author Admin\n */\nblogApp.directive('someBlogArticles',function(){\n\treturn{\n\t\trestrict: 'A',\n\t\ttemplateUrl: 'app/views/directivetmpl/articles.html'\n\t};\n})\n\n\n.directive(\"someBlogFullArticle\",function(){\n\treturn{\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'app/views/directivetmpl/fullarticle.html'\n\t};\n})\n\n\n.directive('emailRequiredValid',function(){\n\treturn{\n\t\tlink: function(scope, element, attrs){\n\t\t\telement.on(\"blur\",function(){\n\t\t\t\tif(scope.regform.email.$error.required){\n\t\t\t\t\talert(\"field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.email.$invalid && !scope.regform.email.$error.required){\n\t\t\t\t\talert(\"invalid email\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t};\n})\n\n.directive('nameRequired',function(){\n\treturn{\n\t\tlink: function(scope, element, attrs){\n\t\t\telement.on(\"blur\",function(){\n\t\t\t\tif(scope.regform.name.$error.required){\n\t\t\t\t\talert(\"field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.$error.minlength){\n\t\t\t\t\talert('You must enter min. 3 characters');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t};\n})\n\n.directive('passRequired',function(){\n\treturn{\n\t\trestrict: 'A',\n\t\tlink: function(scope,element,attrs){\n\t\t\telement.on('blur',function(){\n\t\t\t\tif(scope.regform.password.$error.required){\n\t\t\t\t\talert(\"this field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.password.$error.minlength){\n\t\t\t\t\talert('You must enter min. 6 characters');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n})\n\n.directive('pwCheck', [function () {\n    return {\n      require: 'ngModel',\n      link: function (scope, elem, attrs) {\n        var firstPassword = '#' + attrs.pwCheck;\n        elem.on('blur', function(){\n        \tif(elem.val()!==$(firstPassword).val()){\n        \t\talert(\"Passwords doesn`t match!\");\n        \t}\n        });\n        \n      }\n    };\n  }]);","var articleServices = angular.module('someBlogServices', ['ngResource']);\r\n\r\narticleServices.factory('articles', ['$resource',\r\n  function($resource){\r\n    return $resource('jsondata/:articleId.json', {}, {\r\n      query: {method:'GET', params:{articleId:'articles'}, isArray:true}\r\n    });\r\n  }]);\r\n  \r\n articleServices.factory(\"LS\",['$window',function($window){\r\n \tinit();\r\n     \r\n     return{\r\n \t\tsetData: function(val,name){\r\n \t\t\t$window.localStorage.setItem(name,JSON.stringify(val));\r\n \t\t},\r\n \t\tgetData: function(name){\r\n \t\t\t return JSON.parse($window.localStorage.getItem(name));\r\n \t\t\t\r\n \t\t},\r\n        clearData: function(name){\r\n            $window.localStorage.removeItem(name);\r\n        }\r\n \t};\r\n     \r\n     function init() {\r\n        if(!$window.localStorage)\r\n                throw new Error('local Storage is not set');\r\n     }\r\n }]);\r\n\r\n articleServices.factory(\"artID\",['$window',function($window){\r\n    return{\r\n        setId: function(){\r\n            return Math.floor((Math.random()*6000)+1);\r\n        }\r\n    }\r\n    \r\n }]);\r\n\r\n articleServices.factory(\"customerData\",[\"$http\",'LS','$q','$filter',function($http,LS,$q,$filter){\r\n     var baseUrl = 'jsondata/articles1.json';\r\n     var dataLoad = null; \r\n     init();\r\n     return{ \r\n//         ,sort,direction,pageIndex,pageSize            ,pageIndex,pageSize,sortKey, sortDirection\r\n        getData: function(search,sortKey, sortReverse, pageIndex, pageSize)\r\n        {\r\n            return dataLoad.then(function(data) {\r\n                \r\n                //console.log(\"from getData: \\n\"+data);\r\n                //total number of pagination\r\n                pages = Math.ceil(data.length / pageSize);\r\n                \r\n                //if isset searc && search module\r\n                if(search){\r\n                  //getting data from json by name, lastName and Hobby\r\n                    function searchData(){\r\n                        var seachName = $filter('filter')(data, {name: search});\r\n                        var searchLastName = $filter('filter')(data, {lastname: search});\r\n                        var searchHobby = $filter('filter')(data, {hobby: search});\r\n                        var searchId = $filter('filter')(data, {id: search});\r\n                        \r\n                        //concat all results \r\n                        var resultData = seachName\r\n                            .concat(searchLastName)\r\n                            .concat(searchHobby)\r\n                            .concat(searchId);\r\n                        \r\n                        //excluding duplicated data\r\n                        var filteredResults = resultData.filter(function (item,pos){return resultData.indexOf(item) == pos});\r\n                        return filteredResults;\r\n                    }\r\n                    data = searchData();\r\n                }\r\n                var cout = data.length;\r\n//                if isset sort && sortDirection && sort module\r\n                \r\n                if(sortKey){\r\n                    if(!sortReverse) \r\n                        sortKey=\"-\"+sortKey;\r\n                    else \r\n                        sortKey=\"+\"+sortKey;\r\n                    \r\n                    data = $filter('orderBy')(data,sortKey);\r\n                }\r\n                \r\n                //pagination\r\n                //begin with \r\n                beginWith = ((pageIndex-1) * pageSize);\r\n                data = $filter(\"limitTo\")(data,pageSize,beginWith);\r\n                \r\n              return {\r\n                 items: data,\r\n                count: cout\r\n              };\r\n                \r\n            }\r\n                                );\r\n        },\r\n         getCount: function(){\r\n            return dataLoad.then(function(data){\r\n                return data.length;\r\n            })\r\n         },\r\n         removeItem: function(removeId){\r\n             return dataLoad.then(function(data){\r\n                 console.log(\"data-load value \"+dataLoad.$$state.value);\r\n                 if(removeId){\r\n                     customerArr=[];\r\n                     angular.forEach(data,function(value, key){ \r\n                        if(value.id!==removeId) customerArr.push(value);\r\n                     });\r\n                     data=customerArr;\r\n                    console.log(\"after removing \\n\"+data);\r\n                     \r\n                     LS.clearData(\"cutomers\");\r\n                     test1=LS.getData(\"cutomers\");\r\n                     console.log(\"data after LS delete Item \\n\"+test1);\r\n                     LS.setData(customerArr,\"cutomers\")\r\n                     dataLoad.$$state.value=customerArr;\r\n                     \r\n                     test=LS.getData(\"cutomers\");\r\n                     console.log(\"data from LS after remove \\n\"+test);\r\n                 }\r\n               return data;\r\n             \r\n             })\r\n            \r\n         },\r\n         \r\n         \r\n         \r\n         addCustomer: function(newCustomer){\r\n            return dataLoad.then(function(data){\r\n                id=0;\r\n                angular.forEach(data,function(value,key){\r\n                    if(value.id >id) id=value.id;\r\n                });\r\n                id=id+1;\r\n                newCustomer.id=id;\r\n                data.push(newCustomer);\r\n                LS.clearData(\"cutomers\");\r\n                LS.setData(data,\"cutomers\");\r\n                dataLoad.$$state.value=data;\r\n                return cust={id: 0,name: \"\",lastname: \"\",hobby: \"\",age: \"\"};\r\n            })\r\n         },\r\n         \r\n         getCustomer: function(customerId){\r\n            return dataLoad.then(function(data){\r\n                customer=[];\r\n                \r\n                angular.forEach(data,function(value, key){\r\n                    if(value.id==customerId){\r\n                        customer=value;\r\n                    } \r\n                })\r\n                return customer;\r\n            })\r\n         },\r\n         \r\n         updateCustomer: function(customer){\r\n            return dataLoad.then(function(data){\r\n                arr = [];\r\n                angular.forEach(data,function(value, key){\r\n                    if(value.id!=customer.id) arr.push(value);\r\n                })\r\n                arr.push(customer);\r\n                data=arr;\r\n                LS.clearData(\"cutomers\");\r\n                LS.setData(data,\"cutomers\");\r\n                dataLoad.$$state.value=data;\r\n                return true;\r\n            })\r\n         }\r\n         \r\n        \r\n}\r\n     function init(){\r\n         customers = LS.getData(\"cutomers\");\r\n         if(customers){\r\n            dataLoad = $q.resolve(customers);\r\n         }\r\n             \r\n         else\r\n             dataLoad = $http.get(baseUrl).then(function(response){\r\n                LS.setData(response.data,\"cutomers\");\r\n                return response.data;\r\n            });\r\n         \r\n         return dataLoad;\r\n         \r\n         \r\n         \r\n     }\r\n }]);"],"sourceRoot":"/source/"}