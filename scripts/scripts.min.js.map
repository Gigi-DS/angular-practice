{"version":3,"sources":["app.js","config.js","controllers/addarticle.js","controllers/addCust.js","controllers/alert.js","controllers/article.js","controllers/articles.js","controllers/editCustomer.js","controllers/home.js","controllers/persons.js","controllers/register.js","services/directives.js","services/services.js"],"names":["blogApp","angular","module","controller","$scope","$http","main","Name","Address","config","$routeProvider","when","templateUrl","otherwise","redirectTo","articles","LS","artID","article","id","img","title","short_desc","desc","addArticle","getData","console","log","setId","push","setData","$log","$window","customerData","cust","name","lastname","hobby","age","addCust","newCust","addCustomer","then","data","alert","redirect","location","$timeout","message","$routeParams","get","articleId","orderArticle","removeArticle","i","length","splice","$location","init","getCustomer","customerId","customer","updateCustomer","path","removeData","index","confirm","removeItem","toUrl","query","$filter","refresh","search","sortKey","reverse","pageIndex","pageSize","items","convertModelToVM","persons","totalPages","Math","ceil","count","totalPagesArr","numToArr","e","model","arr","birthday","Date","today","minutes","hours","days","years","round","merge","xPagesLeftRight","Arr","maxPageRightLeft","left","right","sort","n","removeId","reloadPage","reload","keyName","setPage","personId","error","user","directive","restrict","link","scope","element","attrs","on","regform","email","$error","required","$invalid","minlength","password","require","elem","firstPassword","pwCheck","val","$","articleServices","factory","$resource","method","params","isArray","localStorage","Error","setItem","JSON","stringify","parse","getItem","clearData","floor","random","$q","customers","dataLoad","resolve","baseUrl","response","status","staus","statusText","onError","source","sortReverse","searchArr","results","toLowerCase","pages","cout","beginWith","getCount","f","findIndex","item","newCustomer","lastId","forEach","value","key","copy","len"],"mappings":"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","file":"scripts.min.js","sourcesContent":["/**\n * @author Admin\n */\nvar blogApp = angular.module('someBlogApp',[\n\t'ngRoute',\n\t'someBlogServices',\n     'ngAnimate',\n]);\n\nblogApp.controller('testCtrl',['$scope','$http', function($scope,$http){\n    $scope.main={\n        Name: 'Gigi',\n        Address: 'Unknown' \n    }; \n}]);\n","/**\n * @author Admin\n */\nblogApp.config(['$routeProvider',function($routeProvider){\n\t$routeProvider.\n\twhen('/',{\n\t\ttemplateUrl: 'app/views/home.html',\n\t\tcontroller: 'homeCtrl'\n\t})\n\t.when('/articles',{\n\t\ttemplateUrl: \"app/views/articles.html\",\n\t\tcontroller: 'articlesCtrl'\n\t})\n\t.when('/article/:articleId',{\n\t\ttemplateUrl: 'app/views/article.html',\n\t\tcontroller: 'articleCtrl'\n\t}).\n\twhen('/register',{\n\t\ttemplateUrl: 'app/views/register.html',\n\t\tcontroller: 'registerCtrl'\n\t})\n    .when('/addarticle',{\n        templateUrl: 'app/views/addarticle.html',\n        controller: 'addArticleCtrl'\n    })\n     .when('/persons',{\n        templateUrl: 'app/views/persons.html',\n        controller: 'personsCtrl'\n    })\n    .when('/addcustomer',{\n        templateUrl: 'app/views/addcustomer.html',\n        controller: \"addCustCtrl\"\n   })\n    .when('/editcustomer/:customerId',{\n        templateUrl: 'app/views/editcustomer.html',\n        controller: \"editCustCtrl\"\n   })\n\t.otherwise({\n\t\tredirectTo:'app/'\n\t});\n}]);","blogApp.controller('addArticleCtrl',['$scope','$http','articles','LS','artID',function($scope,$http,articles,LS,artID){\r\n//    empty new article obj\r\n\t$scope.article={\r\n        id:\"\",\r\n        img:\"\",\r\n        title:\"\",\r\n        short_desc:\"\",\r\n        desc:\"\"\r\n    };\r\n    \r\n    \r\n    $scope.addArticle=function(article){\r\n//        getting all existing articles\r\n        $scope.articles=LS.getData();\r\n        console.log(\"old articles\"+$scope.articles);\r\n        \r\n        //getting id for new article\r\n        $scope.id=artID.setId();\r\n        if($scope.articles.id=$scope.id){\r\n            $scope.id=artID.setId();\r\n        }\r\n//      setting id and img to new article obj\r\n        $scope.article.id=$scope.id;\r\n        $scope.article.img=\"3.jpg\";\r\n//        pushing new article to the rest of article\r\n        $scope.articles=$scope.articles.push(article);\r\n        console.log(\"new articles\"+$scope.articles);\r\n        console.log($scope.article);\r\n        \r\n        LS.setData($scope.articles);\r\n    }\r\n}]);","blogApp.controller(\"addCustCtrl\",['$scope','$log','LS','$window','customerData',function($scope,$log,LS,$window,customerData){\r\n     $scope.cust={id: 0,name: \"\",lastname: \"\",hobby: \"\",age: \"\"};\r\n      \r\n    \r\n    \r\n    $scope.addCust=function(newCust){\r\n     customerData.addCustomer(newCust).then(function(data){\r\n       $scope.cust=data;\r\n        $window.alert(\"Customer Successeful added!\");\r\n     });\r\n     \r\n    }\r\n    \r\n    $scope.redirect=function(){\r\n         $window.location =\"#/persons\";\r\n    }\r\n}]);","blogApp.controller('alertCtrl',['$scope','$timeout',function($scope,$timeout){\r\n    \r\n    $scope.message=true;\r\n    $timeout(function(){\r\n        $scope.message=false;\r\n    },3000);\r\n    \r\n    \r\n}]);","blogApp.controller('articleCtrl',['$scope','$http','$routeParams','articles',function($scope,$http,$routeParams,articles){\r\n\t$scope.article = articles.get({articleId: $routeParams.articleId});\r\n}]);","blogApp.controller('articlesCtrl',['$scope','$window','$http','articles','LS',function($scope,$window,$http,articles,LS){\r\n//\t$window.alert(\"14\");\r\n//\t $scope.articles=articles.query();\r\n//\t $http.get(\"jsondata/articles.json\").success(function(data){\r\n//\t\t console.log(JSON.stringify(data));\r\n//\t\t LS.setData(data,'articles-storage');\r\n//\t\t $scope.articles=data;\r\n//\t });\r\n//\t\r\n\t// article order\r\n\t $scope.orderArticle='-id';\r\n\t \r\n\t // gettind articles\r\n\t  $scope.articles=LS.getData('articles-storage');\r\n\t  console.log($scope.articles);\r\n\t  \r\n\t  //pagination\r\n//\t$window.alert($scope.articles.id);\r\n   $scope.removeArticle = function(id){\r\n       for( i=$scope.articles.length-1; i>=0; i--) {\r\n            if( $scope.articles[i].id == id) $scope.articles.splice(i,1);\r\n           LS.setData($scope.articles);\r\n       }\r\n   }\r\n\t  \r\n}]);\r\n","blogApp.controller(\"editCustCtrl\",['$scope','$window','$routeParams','$log','$location','customerData',function($scope,$window,$routeParams,$log,$location,customerData){\r\n    $scope.customerId=$routeParams.customerId;\r\n    $scope.customer = {};\r\n    init();\r\n    \r\n    \r\n    \r\n    function init(){\r\n        customerData.getCustomer($scope.customerId).then(function(data){\r\n            \r\n            //data.age= 56;\r\n            $scope.customer=data;\r\n            $log.log(data);\r\n            \r\n        });\r\n        \r\n    }\r\n    \r\n    $scope.updateCustomer=function(customer){\r\n        customerData.updateCustomer(customer).then(function(data){\r\n                $window.alert(\"Customer Succesefully Updated\");\r\n                $location.path(\"/persons\");\r\n        });\r\n    }\r\n    \r\n    //    removing data\r\n   $scope.removeData=function(index){\r\n       // $window.alert(\"remove \"+index);\r\n       if(confirm(\"Sure to DELETE?\")){\r\n            customerData.removeItem(index).then(function(data){\r\n                $location.path(\"/persons\");\r\n            });\r\n            \r\n       }\r\n   }\r\n   \r\n   $scope.redirect=function(toUrl,id){\r\n       if(confirm(\"sure cancel editing?\"))\r\n        $location.path(\"/persons\");\r\n   }\r\n   \r\n}]);","blogApp.controller('homeCtrl',['$scope','$http','articles',function($scope,$http,articles){\r\n\t$scope.articles=articles.query();\r\n}]);","////testing merge\r\n//var gigi = {\"id\":1,\"name\":\"Gigi\", \"lastname\":\"DS\", \"hobby\":\"football\", \"age\":\"1987/06/04\"};\r\n//var gigel = {\"id\":1,\"name\":\"Gigel\", \"lastname\":\"DS-MD\", \"hobby\":\"football\", \"age\":\"1987/06/04\"};\r\n//\r\n////var gigle = {\r\n////    id:1,\r\n////    fname:\"gigel\",\r\n////    lname:\"DS-Moldova\",\r\n////    hobby:\"football\",\r\n////    age:\"1987/06/04\r\n////};\r\n//\r\n//console.log(angular.merge({},gigi,gigel));\r\n//\r\n////practice with functiuonal programming\r\n//function test1() {\r\n//    var i = 4;\r\n//   // alert(\"first: \"+i);\r\n//    f = function () {\r\n//        i = i + 1;\r\n//       // alert(\"second: \"+i);\r\n//        return i;\r\n//    }\r\n//    return {\r\n//        exec: f\r\n//    };\r\n//}\r\n//\r\n//\r\n//var fac = test1;\r\n//\r\n//f1 = fac();\r\n//f2 = fac();\r\n//f3 = fac();\r\n//\r\n//\r\n//console.log('f1.1:' + f1.exec());\r\n//console.log('f2.1:' + f2.exec());\r\n//console.log('f3.3:' + f3.exec());\r\n//console.log('f1.2:' + f1.exec());\r\n//console.log('f1.3:' + f1.exec());\r\n//console.log('f3.2:' + f3.exec());\r\n//console.log('f2.2:' + f2.exec());\r\n//\r\n//\r\n//var say = function(name, message){\r\n//    console.log(name+\" say \"+message);\r\n//}\r\n//\r\n//say(\"Gigi\", \"morning\");\r\n//\r\n//say(\"Gigi\",\"morning\",\"third param no to display\");\r\n//\r\n//say(\"gigi\");\r\n//\r\n//\r\n//sayV2=function(name, message){\r\n//    console.log(name+\" say \"+(message || \"nothing at all\"));\r\n//}\r\n//\r\n//sayV2(\"gigi\");\r\n//\r\n////always return something\r\n//sayfunctional=function(name, message){\r\n//    return name+\" say \"+(message || 'nothing at all yo');\r\n//}\r\n//\r\n//console.log(sayfunctional(\"Gigi\"));\r\n//\r\n////finish practice with functional programming\r\n\r\nblogApp.controller('personsCtrl',['$scope','$routeParams','$window','customerData','$log','$location','$filter',function($scope,$routeParams,$window,customerData,$log,$location,$filter){\r\n   \r\n    //setting empty array for records\r\n\t$scope.persons=[];\r\n    $scope.search = \"\";\r\n    $scope.sortKey = \"id\";\r\n    $scope.reverse = true;\r\n    $scope.pageIndex = 1;\r\n    $scope.pageSize = 5;\r\n    $scope.maxPageRightLeft=2;\r\n    $scope.totalPages = 0;\r\n    $scope.removeId=false;\r\n    $scope.refresh=refresh;\r\n    \r\n  init();\r\n    \r\n    \r\n    \r\n    function init(){\r\n        refresh();\r\n    }\r\n    \r\n    $scope.reloadPage=function(){\r\n        $window.location.reload();\r\n    }\r\n    \r\n    function refresh(){\r\n        customerData.getData($scope.search,$scope.sortKey,$scope.reverse,$scope.pageIndex, $scope.pageSize).then(function(data){\r\n            //console.log(data.status);\r\n            \r\n           //for loop persons convertModelToVM function\r\n            items = data.items;\r\n            for(i=0;i<items.length ; i++)\r\n                items[i] = convertModelToVM(items[i]);\r\n            \r\n            \r\n            $scope.persons = data.items;\r\n            $scope.totalPages = Math.ceil(data.count / $scope.pageSize);\r\n            $scope.totalPagesArr = numToArr($scope.totalPages);\r\n        }).catch(function(e){\r\n            $window.alert(e.message);\r\n        });\r\n    }\r\n      function convertModelToVM(model){\r\n          var arr={};\r\n          var birthday = new Date(model.age);\r\n         var today = new Date($filter('date')(new Date,'yyyy/MM/dd'));\r\n          $log.log\r\n          var age = today - birthday;\r\n          \r\n          var minutes = 1000*60;\r\n          var hours = minutes*60;\r\n          var days = hours*24;\r\n          var years = days*365;\r\n          \r\n          arr.age = Math.round(age/years);\r\n         \r\n          \r\n          \r\n        return angular.merge({},model,arr);\r\n      }\r\n    \r\n    //sort\r\n    $scope.sort=function(keyName){\r\n        if($scope.sortKey!=keyName){\r\n            $scope.sortKey = keyName;\r\n            $scope.reverse = false;\r\n        }else{\r\n             $scope.reverse = !$scope.reverse;\r\n        }\r\n        refresh();\r\n    }\r\n    \r\n    //pagination\r\n    $scope.setPage=function(index){\r\n        $scope.pageIndex = index;\r\n        refresh();\r\n    }\r\n   \r\n   $scope.redirect=function(toUrl,personId){\r\n       $window.location =toUrl+personId;\r\n   }\r\n   \r\n   //x page left and rigth to the current page\r\n  function xPagesLeftRight(Arr){\r\n      //checking if not empty maxPageRightLeft\r\n      if($scope.maxPageRightLeft == null) $scope.maxPageRightLeft = 2;\r\n       var arr=[];\r\n      //setting left pages\r\n        for(i=1;i<=$scope.maxPageRightLeft;i++){\r\n            var left = $scope.pageIndex - i;\r\n            var right = $scope.pageIndex + i;\r\n            if(left>0){\r\n                arr.push(left);\r\n            }\r\n            if(right<=$scope.totalPages)\r\n            arr.push(right);\r\n        }\r\n      \r\n      //setting current page\r\n      arr.push($scope.pageIndex);\r\n      return arr.sort();\r\n   }\r\n   \r\n   \r\n    //from number to array\r\n     function numToArr(n){\r\n        var arr = [];\r\n        for(i =1; i <= n; i++){\r\n            \r\n            arr.push(i);\r\n        }\r\n         xPagesLeftRight(arr);\r\n         return xPagesLeftRight(arr);\r\n    }\r\n    $log.error();\r\n}]); ","blogApp.controller('registerCtrl',['$scope','$http',function($scope,$http){\r\n\t$scope.user={};\r\n}]);","/**\n * @author Admin\n */\nblogApp.directive('someBlogArticles',function(){\n\treturn{\n\t\trestrict: 'A',\n\t\ttemplateUrl: 'app/views/directivetmpl/articles.html'\n\t};\n})\n\n\n.directive(\"someBlogFullArticle\",function(){\n\treturn{\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'app/views/directivetmpl/fullarticle.html'\n\t};\n})\n\n\n.directive('emailRequiredValid',function(){\n\treturn{\n\t\tlink: function(scope, element, attrs){\n\t\t\telement.on(\"blur\",function(){\n\t\t\t\tif(scope.regform.email.$error.required){\n\t\t\t\t\talert(\"field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.email.$invalid && !scope.regform.email.$error.required){\n\t\t\t\t\talert(\"invalid email\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t};\n})\n\n.directive('nameRequired',function(){\n\treturn{\n\t\tlink: function(scope, element, attrs){\n\t\t\telement.on(\"blur\",function(){\n\t\t\t\tif(scope.regform.name.$error.required){\n\t\t\t\t\talert(\"field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.$error.minlength){\n\t\t\t\t\talert('You must enter min. 3 characters');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t};\n})\n\n.directive('passRequired',function(){\n\treturn{\n\t\trestrict: 'A',\n\t\tlink: function(scope,element,attrs){\n\t\t\telement.on('blur',function(){\n\t\t\t\tif(scope.regform.password.$error.required){\n\t\t\t\t\talert(\"this field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.password.$error.minlength){\n\t\t\t\t\talert('You must enter min. 6 characters');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n})\n\n.directive('pwCheck', [function () {\n    return {\n      require: 'ngModel',\n      link: function (scope, elem, attrs) {\n        var firstPassword = '#' + attrs.pwCheck;\n        elem.on('blur', function(){\n        \tif(elem.val()!==$(firstPassword).val()){\n        \t\talert(\"Passwords doesn`t match!\");\n        \t}\n        });\n        \n      }\n    };\n  }]);","var articleServices = angular.module('someBlogServices', ['ngResource']);\r\n\r\narticleServices.factory('articles', ['$resource',\r\n  function($resource){\r\n    return $resource('jsondata/:articleId.json', {}, {\r\n      query: {method:'GET', params:{articleId:'articles'}, isArray:true}\r\n    });\r\n  }]);\r\n  \r\n articleServices.factory(\"LS\",['$window',function($window){\r\n \tinit();\r\n     \r\n     return{\r\n \t\tsetData: function(val,name){\r\n \t\t\t$window.localStorage.setItem(name,JSON.stringify(val));\r\n \t\t},\r\n \t\tgetData: function(name){\r\n \t\t\t return JSON.parse($window.localStorage.getItem(name));\r\n \t\t\t\r\n \t\t},\r\n        clearData: function(name){\r\n            $window.localStorage.removeItem(name);\r\n        }\r\n \t};\r\n     \r\n     function init() {\r\n        if(!$window.localStorage)\r\n                throw new Error('local Storage is not set');\r\n     }\r\n }]);\r\n\r\n articleServices.factory(\"artID\",['$window',function($window){\r\n    return{\r\n        setId: function(){\r\n            return Math.floor((Math.random()*6000)+1);\r\n        }\r\n    }\r\n    \r\n }]);\r\n\r\n articleServices.factory(\"customerData\",[\"$http\",'LS','$q','$filter','$log',function($http,LS,$q,$filter,$log){\r\n     var baseUrl = 'jsondata/articles1.json';\r\n     var dataLoad = null; \r\n     \r\n    // throw('test');\r\n     init();\r\n     return{ \r\n//         ,sort,direction,pageIndex,pageSize            ,pageIndex,pageSize,sortKey, sortDirection\r\n        getData: function(search,sortKey, sortReverse, pageIndex, pageSize)\r\n        {\r\n            return dataLoad.then(function(data) {\r\n                \r\n                //console.log(\"from getData: \\n\"+data);\r\n                //total number of pagination\r\n                pages = Math.ceil(data.length / pageSize);\r\n                \r\n                //if isset searc && search module\r\n                if(search){\r\n                  function searchArr(search){\r\n                        var results = [];\r\n                        for(var i=0;i<data.length;i++){\r\n                            if(data[i].id==search || \r\n                               data[i].name.toLowerCase()==search.toLowerCase() || \r\n                               data[i].lastname.toLowerCase()==search.toLowerCase() || \r\n                               data[i].hobby.toLowerCase()==search.toLowerCase())\r\n                                results.push(data[i]);\r\n                        }\r\n                      return results;\r\n                    }\r\n                    data = searchArr(search);\r\n                        \r\n//                    var seachName = $filter('filter')(data,{{name: search} || {lastname: search}},false);\r\n//                   data=seachName;\r\n                }\r\n                var cout = data.length;\r\n//                if isset sort && sortDirection && sort module\r\n                \r\n                if(sortKey){\r\n                    if(!sortReverse) \r\n                        sortKey=\"-\"+sortKey;\r\n                    else \r\n                        sortKey=\"+\"+sortKey;\r\n                    \r\n                    data = $filter('orderBy')(data,sortKey);\r\n                }\r\n                \r\n                //pagination\r\n                //begin with \r\n                beginWith = ((pageIndex-1) * pageSize);\r\n                data = $filter(\"limitTo\")(data,pageSize,beginWith);\r\n              return {\r\n                 items: data,\r\n                count: cout\r\n              };\r\n                \r\n            }\r\n            //ERROR\r\n                          \r\n                                );\r\n        },\r\n         getCount: function(){\r\n            return dataLoad.then(function(data){\r\n                return data.length;\r\n            })\r\n         },\r\n         removeItem: function(removeId){\r\n                //paramater validation\r\n             return dataLoad.then(function(data){\r\n                                 \r\n                     f = data.findIndex(function(item) { return item.id == removeId; });\r\n                     \r\n                     if(f < 0)\r\n                         return false;\r\n                     data.splice(f,1);\r\n                     \r\n                     LS.setData(data,\"cutomers\");\r\n                     //dataLoad = $q.resolve(data);\r\n                     \r\n                     return true;\r\n             });\r\n         },\r\n         \r\n         \r\n         \r\n         addCustomer: function(newCustomer){\r\n            return dataLoad.then(function(data){\r\n                data.lastId = 0;\r\n                id=0;\r\n                angular.forEach(data,function(value,key){\r\n                    if(value.id >id) id=value.id;\r\n                \r\n                });\r\n                id=id+1;\r\n                newCustomer.id=id;\r\n                data.push(newCustomer);\r\n               // LS.clearData(\"cutomers\");\r\n                LS.setData(data,\"cutomers\");\r\n                //dataLoad.$$state.value=data;\r\n                return angular.copy(newCustomer);// should return new customer - > id outside\r\n            });\r\n         },\r\n         \r\n         getCustomer: function(customerId){\r\n            return dataLoad.then(function(data){\r\n                customer= null;\r\n                for (var i = 0, len = data.length; i < len; i++) {\r\n                    if(data[i].id==customerId){\r\n                        customer=data[i];\r\n                        break;\r\n                    } \r\n                }\r\n                return angular.copy(customer);\r\n            }).catch(onError);\r\n         },\r\n         \r\n         updateCustomer: function(customer){\r\n            return dataLoad.then(function(data){\r\n                arr = [];\r\n                angular.forEach(data,function(value, key){\r\n                    if(value.id!=customer.id) arr.push(value);\r\n                })\r\n                arr.push(customer);\r\n                data=arr;\r\n//                LS.clearData(\"cutomers\");\r\n                LS.setData(data,\"cutomers\");\r\n                dataLoad= $q.resolve(data);\r\n                return data;\r\n            }).catch(onError);\r\n         }\r\n         \r\n        \r\n}\r\n     function init(){\r\n         customers = LS.getData(\"cutomers\");\r\n         if(customers){\r\n            dataLoad = $q.resolve(customers);\r\n         }\r\n             \r\n         else\r\n             dataLoad = $http.get(baseUrl).then(function(response){\r\n                LS.setData(response.data,\"cutomers\");\r\n                 \r\n                return response.data;\r\n            }).catch(function(e) { throw { status: e.staus, message: e.statusText }});\r\n            dataLoad.catch(onError);\r\n         \r\n         return dataLoad;\r\n         \r\n         \r\n         \r\n     }\r\n     \r\n     function onError(error){\r\n         \r\n        $log.error({ status: error.status, message: error.message, source: 'customerData'});\r\n     }\r\n     \r\n }]);"],"sourceRoot":"/source/"}