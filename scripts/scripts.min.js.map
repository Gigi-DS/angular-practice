{"version":3,"sources":["app.js","config.js","controllers/addarticle.js","controllers/addCust.js","controllers/alert.js","controllers/article.js","controllers/articles.js","controllers/editCustomer.js","controllers/home.js","controllers/partialUpdate.js","controllers/persons.js","controllers/register.js","services/alertService.js","services/directives.js","services/services.js"],"names":["blogApp","angular","module","controller","$scope","$http","main","Name","Address","config","$routeProvider","when","templateUrl","otherwise","redirectTo","articles","LS","artID","article","id","img","title","short_desc","desc","addArticle","getData","console","log","setId","push","setData","$log","$window","customerData","alertService","cust","name","lastname","hobby","age","addCust","newCust","addCustomer","then","data","location","display","error","message","redirect","$timeout","init","subscribe","m","getMessage","showMessage","text","type","t","messageShow","$routeParams","get","articleId","orderArticle","removeArticle","i","length","splice","$location","getCustomer","customerId","customer","updateCustomer","path","removeData","index","confirm","removeItem","toUrl","query","Date","today","personId","quickSave","c","customerPatch","quickEdit","updatecustomer","$setUntouched","$filter","refresh","search","sortKey","reverse","pageIndex","pageSize","items","convertModelToVM","persons","totalPages","Math","ceil","count","totalPagesArr","numToArr","e","alert","model","arr","birthday","copy","minutes","hours","days","years","round","merge","xPagesLeftRight","Arr","maxPageRightLeft","left","right","sort","n","removeId","reloadPage","reload","keyName","setPage","showCustomer","close","partUpdate","fullUpdate","partupdate","user","alertServices","factory","$rootScope","$emit","scope","callback","$on","directive","restrict","link","element","attrs","on","regform","email","$error","required","$invalid","minlength","password","require","elem","firstPassword","pwCheck","val","$","articleServices","$resource","method","params","isArray","localStorage","Error","setItem","JSON","stringify","parse","getItem","clearData","floor","random","$q","findItemById","customers","dataLoad","resolve","baseUrl","response","status","staus","statusText","onError","source","schema","properties","sortReverse","searchArr","results","toLowerCase","pages","cout","beginWith","getCount","f","found","some","item","newCustomer","valid","tv4","validateMultiple","lastId","forEach","value","key","reject","errors","getAll"],"mappings":"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","file":"scripts.min.js","sourcesContent":["/**\n * @author Admin\n */\n\n\nvar blogApp = angular.module('someBlogApp',[\n\t'ngRoute',\n\t'someBlogServices',\n    'ngAnimate',\n    'alertServices'\n]);\n\nblogApp.controller('testCtrl',['$scope','$http', function($scope,$http){\n    $scope.main={\n        Name: 'Gigi',\n        Address: 'Unknown' \n    }; \n}]);\n","/**\n * @author Admin\n */\nblogApp.config(['$routeProvider',function($routeProvider){\n\t$routeProvider.\n\twhen('/',{\n\t\ttemplateUrl: 'app/views/home.html',\n\t\tcontroller: 'homeCtrl'\n\t})\n\t.when('/articles',{\n\t\ttemplateUrl: \"app/views/articles.html\",\n\t\tcontroller: 'articlesCtrl'\n\t})\n\t.when('/article/:articleId',{\n\t\ttemplateUrl: 'app/views/article.html',\n\t\tcontroller: 'articleCtrl'\n\t}).\n\twhen('/register',{\n\t\ttemplateUrl: 'app/views/register.html',\n\t\tcontroller: 'registerCtrl'\n\t})\n    .when('/addarticle',{\n        templateUrl: 'app/views/addarticle.html',\n        controller: 'addArticleCtrl'\n    })\n     .when('/persons',{\n        templateUrl: 'app/views/persons.html',\n        controller: 'personsCtrl'\n    })\n    .when('/addcustomer',{\n        templateUrl: 'app/views/addcustomer.html',\n        controller: \"addCustCtrl\"\n   })\n    .when('/editcustomer/:customerId',{\n        templateUrl: 'app/views/editcustomer.html',\n        controller: \"editCustCtrl\"\n   })\n    .when('/partialupdate/:customerId',{\n        templateUrl: 'app/views/partialupdate.html',\n        controller: 'partialUpdtCtrl'\n    })\n\t.otherwise({\n\t\tredirectTo:'app/'\n\t});\n}]);","blogApp.controller('addArticleCtrl',['$scope','$http','articles','LS','artID',function($scope,$http,articles,LS,artID){\r\n//    empty new article obj\r\n\t$scope.article={\r\n        id:\"\",\r\n        img:\"\",\r\n        title:\"\",\r\n        short_desc:\"\",\r\n        desc:\"\"\r\n    };\r\n    \r\n    \r\n    $scope.addArticle=function(article){\r\n//        getting all existing articles\r\n        $scope.articles=LS.getData();\r\n        console.log(\"old articles\"+$scope.articles);\r\n        \r\n        //getting id for new article\r\n        $scope.id=artID.setId();\r\n        if($scope.articles.id=$scope.id){\r\n            $scope.id=artID.setId();\r\n        }\r\n//      setting id and img to new article obj\r\n        $scope.article.id=$scope.id;\r\n        $scope.article.img=\"3.jpg\";\r\n//        pushing new article to the rest of article\r\n        $scope.articles=$scope.articles.push(article);\r\n        console.log(\"new articles\"+$scope.articles);\r\n        console.log($scope.article);\r\n        \r\n        LS.setData($scope.articles);\r\n    }\r\n}]);","blogApp.controller(\"addCustCtrl\",['$scope','$log','LS','$window','customerData','alertService',function($scope,$log,LS,$window,customerData,alertService){\r\n     $scope.cust={id: 0,name: \"\",lastname: \"\",hobby: \"\",age: \"\"};\r\n      \r\n    \r\n    \r\n    $scope.addCust=function(newCust){\r\n     customerData.addCustomer(newCust).then(function(data){\r\n            $scope.cust=data;\r\n            $window.location =\"#/persons\";\r\n            alertService.display(\"Customer successefuly added!\",\"success\");\r\n     },\r\n    function(error){\r\n        alertService.display(error.message,\"danger\");\r\n     });\r\n     \r\n    }\r\n    \r\n    $scope.redirect=function(){\r\n         $window.location =\"#/persons\";\r\n    }\r\n}]);","blogApp.controller('alertCtrl',['$scope','$timeout','alertService',function($scope,$timeout,alertService){\r\n    $scope.message=\"\";\r\n    $scope.type=\"success\";\r\n    init();\r\n    \r\n    \r\n   \r\n    \r\n    function init(){\r\n        alertService.subscribe($scope, function (){\r\n            var m = alertService.getMessage();\r\n            showMessage(m.text,m.type);\r\n        });\r\n    \r\n    }\r\n    \r\n    function showMessage(m,t) {\r\n        $scope.messageShow=true;\r\n        $scope.message=m;\r\n        $scope.type=t;\r\n        $timeout(function(){\r\n            $scope.messageShow=false;\r\n        },3000);\r\n    }\r\n}]);","blogApp.controller('articleCtrl',['$scope','$http','$routeParams','articles',function($scope,$http,$routeParams,articles){\r\n\t$scope.article = articles.get({articleId: $routeParams.articleId});\r\n}]);","blogApp.controller('articlesCtrl',['$scope','$window','$http','articles','LS',function($scope,$window,$http,articles,LS){\r\n//\t$window.alert(\"14\");\r\n//\t $scope.articles=articles.query();\r\n//\t $http.get(\"jsondata/articles.json\").success(function(data){\r\n//\t\t console.log(JSON.stringify(data));\r\n//\t\t LS.setData(data,'articles-storage');\r\n//\t\t $scope.articles=data;\r\n//\t });\r\n//\t\r\n\t// article order\r\n\t $scope.orderArticle='-id';\r\n\t \r\n\t // gettind articles\r\n\t  $scope.articles=LS.getData('articles-storage');\r\n\t  console.log($scope.articles);\r\n\t  \r\n\t  //pagination\r\n//\t$window.alert($scope.articles.id);\r\n   $scope.removeArticle = function(id){\r\n       for( i=$scope.articles.length-1; i>=0; i--) {\r\n            if( $scope.articles[i].id == id) $scope.articles.splice(i,1);\r\n           LS.setData($scope.articles);\r\n       }\r\n   }\r\n\t  \r\n}]);\r\n","blogApp.controller(\"editCustCtrl\",['$scope','$window','$routeParams','$log','$location','customerData','alertService',function($scope,$window,$routeParams,$log,$location,customerData,alertService){\r\n    $scope.customerId=$routeParams.customerId;\r\n    $scope.customer = {};\r\n    init();\r\n    \r\n    \r\n    \r\n    function init(){\r\n        customerData.getCustomer($scope.customerId).then(function(data){\r\n            \r\n            //data.age= 56;\r\n            $scope.customer=data;\r\n            \r\n        });\r\n        \r\n    }\r\n    \r\n    $scope.updateCustomer=function(customer){\r\n        customerData.updateCustomer(customer).then(function(data){\r\n            $location.path(\"/persons\");\r\n            alertService.display(\"Customer successefuly updated!\",\"success\");\r\n        },\r\n        function(error){\r\n            alertService.display(error.message,\"danger\");\r\n        });\r\n    }\r\n    \r\n    //    removing data\r\n   $scope.removeData=function(index){\r\n       if(confirm(\"Sure to DELETE?\")){\r\n            customerData.removeItem(index).then(function(data){\r\n                $location.path(\"/persons\");\r\n            });\r\n            \r\n       }\r\n   }\r\n   \r\n   $scope.redirect=function(toUrl,id){\r\n       if(confirm(\"sure cancel editing?\"))\r\n        $location.path(\"/persons\");\r\n   }\r\n   \r\n}]);","blogApp.controller('homeCtrl',['$scope','$http','articles',function($scope,$http,articles){\r\n\t$scope.articles=articles.query();\r\n}]);","\r\nblogApp.controller('partialUpdtCtrl',['$scope','$window','$routeParams','$location','customerData','alertService',function($scope, $window, $routeParams, $location, customerData,alertService){\r\n    $scope.id=$routeParams.customerId;\r\n    $scope.customer = {};\r\n    $scope.customer.age=\"\";\r\n    $scope.today = new Date();\r\n    init();\r\n    \r\n    function init(){\r\n        getCustomer($scope.id);\r\n    }\r\n    \r\n    function getCustomer(id){\r\n        customerData.getCustomer(id).then(function(data){\r\n            $scope.customer = data;\r\n            $scope.customer.age = new Date(data.age);\r\n        });\r\n    }\r\n    \r\n    $scope.redirect=function(toUrl,personId){\r\n       $window.location =toUrl+personId;\r\n   }\r\n    \r\n    $scope.quickSave=function(c){\r\n        customerData.customerPatch(c).then(function(data){\r\n            //console.log(data);\r\n                $scope.quickEdit = false;\r\n                $scope.customer={};\r\n                $location.path(\"/persons\");\r\n                alertService.display(\"Edited successfully updated!\",\"success\");\r\n                $scope.updatecustomer.$setUntouched();\r\n            \r\n            \r\n        }, function(error){\r\n            alertService.display(error.message,\"danger\");\r\n        });\r\n    }\r\n}]);","////testing merge\r\n//var gigi = {\"id\":1,\"name\":\"Gigi\", \"lastname\":\"DS\", \"hobby\":\"football\", \"age\":\"1987/06/04\"};\r\n//var gigel = {\"id\":1,\"name\":\"Gigel\", \"lastname\":\"DS-MD\", \"hobby\":\"football\", \"age\":\"1987/06/04\"};\r\n//\r\n////var gigle = {\r\n////    id:1,\r\n////    fname:\"gigel\",\r\n////    lname:\"DS-Moldova\",\r\n////    hobby:\"football\",\r\n////    age:\"1987/06/04\r\n////};\r\n//\r\n//console.log(angular.merge({},gigi,gigel));\r\n//\r\n////practice with functiuonal programming\r\n//function test1() {\r\n//    var i = 4;\r\n//   // alert(\"first: \"+i);\r\n//    f = function () {\r\n//        i = i + 1;\r\n//       // alert(\"second: \"+i);\r\n//        return i;\r\n//    }\r\n//    return {\r\n//        exec: f\r\n//    };\r\n//}\r\n//\r\n//\r\n//var fac = test1;\r\n//\r\n//f1 = fac();\r\n//f2 = fac();\r\n//f3 = fac();\r\n//\r\n//\r\n//console.log('f1.1:' + f1.exec());\r\n//console.log('f2.1:' + f2.exec());\r\n//console.log('f3.3:' + f3.exec());\r\n//console.log('f1.2:' + f1.exec());\r\n//console.log('f1.3:' + f1.exec());\r\n//console.log('f3.2:' + f3.exec());\r\n//console.log('f2.2:' + f2.exec());\r\n//\r\n//\r\n//var say = function(name, message){\r\n//    console.log(name+\" say \"+message);\r\n//}\r\n//\r\n//say(\"Gigi\", \"morning\");\r\n//\r\n//say(\"Gigi\",\"morning\",\"third param no to display\");\r\n//\r\n//say(\"gigi\");\r\n//\r\n//\r\n//sayV2=function(name, message){\r\n//    console.log(name+\" say \"+(message || \"nothing at all\"));\r\n//}\r\n//\r\n//sayV2(\"gigi\");\r\n//\r\n////always return something\r\n//sayfunctional=function(name, message){\r\n//    return name+\" say \"+(message || 'nothing at all yo');\r\n//}\r\n//\r\n//console.log(sayfunctional(\"Gigi\"));\r\n//\r\n////finish practice with functional programming\r\n//  var Validate = require('validate-arguments');\r\n//  console.log(Validate);\r\nblogApp.controller('personsCtrl',['$scope','$routeParams','$window','customerData','$log','$location','$filter','$http','alertService',function($scope,$routeParams,$window,customerData,$log,$location,$filter,$http,alertService){\r\n    //setting empty array for records\r\n\t$scope.persons=[];\r\n    $scope.search = \"\";\r\n    $scope.sortKey = \"id\";\r\n    $scope.reverse = true;\r\n    $scope.pageIndex = 1;\r\n    $scope.pageSize = 5;\r\n    $scope.maxPageRightLeft=2;\r\n    $scope.totalPages = 0;\r\n    $scope.removeId=false;\r\n    $scope.refresh=refresh;\r\n    $scope.quickEdit=false;\r\n  init();\r\n    \r\n    \r\n    \r\n    function init(){\r\n        refresh();\r\n    }\r\n    \r\n    $scope.reloadPage=function(){\r\n        $window.location.reload();\r\n    }\r\n    \r\n    function refresh(){\r\n        customerData.getData($scope.search,$scope.sortKey,$scope.reverse,$scope.pageIndex, $scope.pageSize).then(function(data){\r\n            //console.log(data.status);\r\n            \r\n           //for loop persons convertModelToVM function\r\n            items = data.items;\r\n            for(i=0;i<items.length ; i++)\r\n                items[i] = convertModelToVM(items[i]);\r\n            \r\n            \r\n            $scope.persons = data.items;\r\n            $scope.totalPages = Math.ceil(data.count / $scope.pageSize);\r\n            $scope.totalPagesArr = numToArr($scope.totalPages);\r\n        }).catch(function(e){\r\n            $window.alert(e.message);\r\n        });\r\n    }\r\n      function convertModelToVM(model){\r\n          var arr={};\r\n          var birthday = new Date(model.age);\r\n          arr.birthday = angular.copy(model.age);\r\n          \r\n         var today = new Date($filter('date')(new Date,'yyyy/MM/dd'));\r\n          var age = today - birthday;\r\n          \r\n          var minutes = 1000*60;\r\n          var hours = minutes*60;\r\n          var days = hours*24;\r\n          var years = days*365;\r\n          \r\n          arr.birthday = Math.round(age/years);\r\n          \r\n          \r\n        return angular.merge({},model,arr);\r\n      }\r\n    \r\n    //sort\r\n    $scope.sort=function(keyName){\r\n        if($scope.sortKey!=keyName){\r\n            $scope.sortKey = keyName;\r\n            $scope.reverse = false;\r\n        }else{\r\n             $scope.reverse = !$scope.reverse;\r\n        }\r\n        refresh();\r\n    }\r\n    \r\n    //pagination\r\n    $scope.setPage=function(index){\r\n        $scope.pageIndex = index;\r\n        refresh();\r\n    }\r\n   \r\n    //show customer\r\n    $scope.showCustomer=function(id){\r\n        $scope.quickEdit = true;\r\n        var customer = {};\r\n        for(var i=0; i<$scope.persons.length;i++){\r\n            if($scope.persons[i].id==id){\r\n                customer=angular.copy($scope.persons[i]);\r\n                break;\r\n            }\r\n        }\r\n        return $scope.customer=customer;\r\n    }\r\n    \r\n    $scope.close = function(){\r\n       $scope.customer={};\r\n        $scope.quickEdit = false;\r\n   }\r\n    \r\n    $scope.partUpdate = function(id){\r\n        $location.path(\"/partialupdate/\"+id);\r\n    }\r\n    \r\n     $scope.fullUpdate = function(id){\r\n        $location.path(\"/editcustomer/\"+id);\r\n    }\r\n    \r\n    $scope.quickSave=function(c){\r\n        customerData.customerPatch(c).then(function(data){\r\n            //console.log(data);\r\n                $scope.quickEdit = false;\r\n                $scope.customer={};\r\n                refresh();\r\n                alertService.display(\"Edited successfully updated!\",\"success\");\r\n                $scope.partupdate.$setUntouched();\r\n               // console.log($scope.partupdate);\r\n            \r\n            \r\n        }, function(error){\r\n//            console.log(error.message);\r\n            alertService.display(error.message,\"danger\");\r\n        });\r\n    }\r\n    \r\n   $scope.redirect=function(toUrl,personId){\r\n       $window.location =toUrl+personId;\r\n   }\r\n   \r\n   \r\n   //x page left and rigth to the current page\r\n  function xPagesLeftRight(Arr){\r\n      //checking if not empty maxPageRightLeft\r\n      if($scope.maxPageRightLeft == null) $scope.maxPageRightLeft = 2;\r\n       var arr=[];\r\n      //setting left pages\r\n        for(i=1;i<=$scope.maxPageRightLeft;i++){\r\n            var left = $scope.pageIndex - i;\r\n            var right = $scope.pageIndex + i;\r\n            if(left>0){\r\n                arr.push(left);\r\n            }\r\n            if(right<=$scope.totalPages)\r\n            arr.push(right);\r\n        }\r\n      \r\n      //setting current page\r\n      arr.push($scope.pageIndex);\r\n      return arr.sort();\r\n   }\r\n   \r\n   \r\n    //from number to array\r\n     function numToArr(n){\r\n        var arr = [];\r\n        for(i =1; i <= n; i++){\r\n            \r\n            arr.push(i);\r\n        }\r\n         xPagesLeftRight(arr);\r\n         return xPagesLeftRight(arr);\r\n    }\r\n    $log.error();\r\n    \r\n\r\n}]); ","blogApp.controller('registerCtrl',['$scope','$http',function($scope,$http){\r\n\t$scope.user={};\r\n}]);","var alertServices = angular.module('alertServices', []);\r\n\r\nalertServices.factory('alertService', ['$rootScope',\r\n    \r\n  function($rootScope){\r\n      var message = \"\";\r\n      var type = \"success\";\r\n    return {\r\n        display: function(m,t) {\r\n            message=m;\r\n            type=t;\r\n            $rootScope.$emit(\"alert-message-event\");\r\n        \r\n        },\r\n        subscribe: function(scope,callback){\r\n            var handler = $rootScope.$on('alert-message-event',callback);\r\n        },\r\n        getMessage: function(){\r\n            return {\r\n                \"text\":message,\r\n                \"type\":type\r\n            }\r\n            \r\n        }\r\n    };\r\n  }]);","/**\n * @author Admin\n */\nblogApp.directive('someBlogArticles',function(){\n\treturn{\n\t\trestrict: 'A',\n\t\ttemplateUrl: 'app/views/directivetmpl/articles.html'\n\t};\n})\n\n\n.directive(\"someBlogFullArticle\",function(){\n\treturn{\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'app/views/directivetmpl/fullarticle.html'\n\t};\n})\n\n\n.directive('emailRequiredValid',function(){\n\treturn{\n\t\tlink: function(scope, element, attrs){\n\t\t\telement.on(\"blur\",function(){\n\t\t\t\tif(scope.regform.email.$error.required){\n\t\t\t\t\talert(\"field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.email.$invalid && !scope.regform.email.$error.required){\n\t\t\t\t\talert(\"invalid email\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t};\n})\n\n.directive('nameRequired',function(){\n\treturn{\n\t\tlink: function(scope, element, attrs){\n\t\t\telement.on(\"blur\",function(){\n\t\t\t\tif(scope.regform.name.$error.required){\n\t\t\t\t\talert(\"field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.$error.minlength){\n\t\t\t\t\talert('You must enter min. 3 characters');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t};\n})\n\n.directive('passRequired',function(){\n\treturn{\n\t\trestrict: 'A',\n\t\tlink: function(scope,element,attrs){\n\t\t\telement.on('blur',function(){\n\t\t\t\tif(scope.regform.password.$error.required){\n\t\t\t\t\talert(\"this field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.password.$error.minlength){\n\t\t\t\t\talert('You must enter min. 6 characters');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n})\n\n.directive('pwCheck', [function () {\n    return {\n      require: 'ngModel',\n      link: function (scope, elem, attrs) {\n        var firstPassword = '#' + attrs.pwCheck;\n        elem.on('blur', function(){\n        \tif(elem.val()!==$(firstPassword).val()){\n        \t\talert(\"Passwords doesn`t match!\");\n        \t}\n        });\n        \n      }\n    };\n  }]);","var articleServices = angular.module('someBlogServices', ['ngResource']);\r\n\r\narticleServices.factory('articles', ['$resource',\r\n  function($resource){\r\n    return $resource('jsondata/:articleId.json', {}, {\r\n      query: {method:'GET', params:{articleId:'articles'}, isArray:true}\r\n    });\r\n  }]);\r\n  \r\n articleServices.factory(\"LS\",['$window',function($window){\r\n \tinit();\r\n     \r\n     return{\r\n \t\tsetData: function(val,name){\r\n \t\t\t$window.localStorage.setItem(name,JSON.stringify(val));\r\n \t\t},\r\n \t\tgetData: function(name){\r\n \t\t\t return JSON.parse($window.localStorage.getItem(name));\r\n \t\t\t\r\n \t\t},\r\n        clearData: function(name){\r\n            $window.localStorage.removeItem(name);\r\n        }\r\n \t};\r\n     \r\n     function init() {\r\n        if(!$window.localStorage)\r\n                throw new Error('local Storage is not set');\r\n     }\r\n }]);\r\n\r\n articleServices.factory(\"artID\",['$window',function($window){\r\n    return{\r\n        setId: function(){\r\n            return Math.floor((Math.random()*6000)+1);\r\n        }\r\n    }\r\n }]);\r\n\r\n articleServices.factory(\"customerData\",[\"$http\",'LS','$q','$filter','$log',function($http,LS,$q,$filter,$log){\r\n     var baseUrl = 'jsondata/articles1.json';\r\n     var dataLoad = null; \r\n//    LS.clearData(\"cutomers\");\r\n     //schma for validation\r\n     schema = {\r\n                \"type\":\"object\",\r\n                \"properties\":{\r\n                    \"id\":{\"type\":\"number\"},\r\n                    \"name\":{\"type\":\"string\"},\r\n                    \"lastname\":{\"type\":\"string\"},\r\n                    \"hobby\":{\"type\":\"string\"},\r\n                    \"age\":{\"type\":\"object\"}\r\n                }\r\n            };\r\n     \r\n    // throw('test');\r\n     init();\r\n     return{ \r\n//         sort, direction, pageIndex, pageSize, pageIndex, pageSize, sortKey, sortDirection\r\n        getData: function(search,sortKey, sortReverse, pageIndex, pageSize)\r\n        {\r\n            return dataLoad.then(function(data) {\r\n                //total number of pagination\r\n                pages = Math.ceil(data.length / pageSize);\r\n                \r\n                //if isset search && search module\r\n                if(search){\r\n                  function searchArr(search){\r\n                        var results = [];\r\n                        for(var i=0;i<data.length;i++){\r\n                            if(data[i].id==search || \r\n                               data[i].name.toLowerCase()==search.toLowerCase() || \r\n                               data[i].lastname.toLowerCase()==search.toLowerCase() || \r\n                               data[i].hobby.toLowerCase()==search.toLowerCase())\r\n                               results.push(data[i]);\r\n                        }\r\n                      return results;\r\n                    }\r\n                    data = searchArr(search);\r\n                }\r\n                var cout = data.length;\r\n//                if isset sort && sortDirection && sort module\r\n                \r\n                if(sortKey){\r\n                    if(!sortReverse) \r\n                        sortKey=\"-\"+sortKey;\r\n                    else \r\n                        sortKey=\"+\"+sortKey;\r\n                    \r\n                    data = $filter('orderBy')(data,sortKey);\r\n                }\r\n                \r\n                //pagination\r\n                //begin with \r\n                beginWith = ((pageIndex-1) * pageSize);\r\n                data = $filter(\"limitTo\")(data,pageSize,beginWith);\r\n              return {\r\n                 items: data,\r\n                count: cout\r\n              };\r\n                \r\n            }\r\n            //ERROR\r\n                          \r\n                                );\r\n        },\r\n         getCount: function(){\r\n            return dataLoad.then(function(data){\r\n                return data.length;\r\n            })\r\n         },\r\n         removeItem: function(removeId){\r\n                //paramater validation\r\n             return dataLoad.then(function(data){\r\n\r\n                 var f;\r\n                 var found = data.some(function(item, index) { f = index; return item.id == removeId; });\r\n\r\n                 if (!found) {\r\n                     return false;\r\n                 }\r\n\r\n                 data.splice(f, 1);\r\n                 console.log(data);\r\n                 \r\n                     LS.setData(data,\"cutomers\");\r\n                     \r\n                     return true;\r\n             });\r\n         },\r\n         \r\n         \r\n         \r\n         addCustomer: function(newCustomer){\r\n             var valid = tv4.validateMultiple(newCustomer, schema);\r\n                if(!valid.valid){\r\n                   return $q.reject(valid.errors[0]);\r\n                }else{\r\n                    return dataLoad.then(function(data){\r\n                     //validation\r\n                        data.lastId = 0;\r\n                        id=0;\r\n                        angular.forEach(data,function(value,key){\r\n                            if(value.id >id) id=value.id;\r\n\r\n                        });\r\n                        id=id+1;\r\n                        newCustomer.id=id;\r\n                        data.push(newCustomer);\r\n                        LS.setData(data,\"cutomers\");\r\n                        return angular.copy(newCustomer);   // should return new customer - > id outside\r\n            })};\r\n         },\r\n         \r\n         getAll: function(){\r\n            return dataLoad.then(function(data){\r\n                return angular.copy(data);\r\n            })\r\n         },\r\n         \r\n         updateCustomer: function(customer){\r\n             var valid = tv4.validateMultiple(customer, schema);\r\n                if(!valid.valid){\r\n                    //console.log(valid);\r\n                    return $q.reject(valid.errors[0]);\r\n                }\r\n            return dataLoad.then(function(data){\r\n                    arr = [];\r\n                    angular.forEach(data,function(value, key){\r\n                        if(value.id!=customer.id) arr.push(value);\r\n                    })\r\n                    arr.push(customer);\r\n                    data=arr;\r\n                    LS.setData(data,\"cutomers\");\r\n                    dataLoad= $q.resolve(data);\r\n                    return angular.copy(arr);\r\n                \r\n            })\r\n         },\r\n         \r\n          getCustomer: function(customerId){\r\n            return dataLoad.then(function(data){\r\n                customer={};\r\n                customer=findItemById(data,customerId);\r\n                console.log(customerId);\r\n                return angular.copy(customer);\r\n            })\r\n         },\r\n         \r\n         customerPatch: function(c){\r\n             // console.log(valid);\r\n             var valid = tv4.validateMultiple(c, schema);\r\n                if(!valid.valid){\r\n                    //console.log(valid);\r\n                    return $q.reject(valid.errors[0]);\r\n                }\r\n             \r\n            return dataLoad.then(function(data){\r\n                    angular.merge(findItemById(data,c.id),c);\r\n                    LS.setData(data,\"cutomers\");\r\n                   return c;\r\n                \r\n            });\r\n         }\r\n         \r\n        \r\n}\r\n     function findItemById(data,id){\r\n        for(var i=0;i<data.length;i++){\r\n            if(data[i].id==id)\r\n                break;\r\n        }\r\n         return data[i];\r\n     }\r\n     \r\n     function init(){\r\n         customers = LS.getData(\"cutomers\");\r\n         if(customers){\r\n            dataLoad = $q.resolve(customers);\r\n         }\r\n         else\r\n             dataLoad = $http.get(baseUrl).then(function(response){\r\n                LS.setData(response.data,\"cutomers\");\r\n                return response.data;\r\n            }).catch(function(e) { throw { status: e.staus, message: e.statusText }});\r\n            dataLoad.catch(onError);\r\n         return dataLoad;\r\n     }\r\n     \r\n     function onError(error){\r\n        $log.error(error);\r\n         $log.error({ status: error.status, message: error.message, source: 'customerData'});\r\n     }\r\n     \r\n }]);"],"sourceRoot":"/source/"}