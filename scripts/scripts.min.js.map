{"version":3,"sources":["app.js","config.js","services/alertService.js","services/directives.js","services/services.js","controllers/addarticle.js","controllers/addCust.js","controllers/alert.js","controllers/article.js","controllers/articles.js","controllers/editCustomer.js","controllers/home.js","controllers/partialUpdate.js","controllers/persons.js","controllers/register.js"],"names":["blogApp","angular","module","controller","$scope","$http","main","Name","Address","config","$routeProvider","when","templateUrl","otherwise","redirectTo","alertServices","factory","$rootScope","message","type","display","m","t","$emit","subscribe","scope","callback","$on","getMessage","text","directive","restrict","link","element","attrs","on","regform","email","$error","required","alert","$invalid","name","minlength","password","require","elem","firstPassword","pwCheck","val","$","articleServices","$resource","query","method","params","articleId","isArray","$window","init","localStorage","Error","setData","setItem","JSON","stringify","getData","parse","getItem","clearData","removeItem","setId","Math","floor","random","LS","$q","$filter","$log","findItemById","data","id","i","length","customers","dataLoad","resolve","get","baseUrl","then","response","e","status","staus","statusText","onError","error","source","schema","properties","lastname","hobby","age","search","sortKey","sortReverse","pageIndex","pageSize","searchArr","results","toLowerCase","push","pages","ceil","cout","beginWith","items","count","getCount","removeId","f","found","some","item","index","splice","console","log","addCustomer","newCustomer","valid","tv4","validateMultiple","lastId","forEach","value","key","copy","reject","errors","getAll","updateCustomer","customer","arr","getCustomer","customerId","customerPatch","c","merge","articles","artID","article","img","title","short_desc","desc","addArticle","customerData","alertService","cust","addCust","newCust","location","redirect","$timeout","showMessage","messageShow","$routeParams","orderArticle","removeArticle","$location","path","removeData","confirm","toUrl","refresh","reverse","convertModelToVM","persons","totalPages","totalPagesArr","numToArr","model","birthday","Date","today","minutes","hours","days","years","round","xPagesLeftRight","Arr","maxPageRightLeft","left","right","sort","n","quickEdit","reloadPage","reload","keyName","setPage","showCustomer","close","quickSave","personId","user"],"mappings":"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","file":"scripts.min.js","sourcesContent":["/**\n * @author Admin\n */\n\n\nvar blogApp = angular.module('someBlogApp',[\n\t'ngRoute',\n\t'someBlogServices',\n    'ngAnimate',\n    'alertServices'\n]);\n\nblogApp.controller('testCtrl',['$scope','$http', function($scope,$http){\n    $scope.main={\n        Name: 'Gigi',\n        Address: 'Unknown' \n    }; \n}]);\n","/**\n * @author Admin\n */\nblogApp.config(['$routeProvider',function($routeProvider){\n\t$routeProvider.\n\twhen('/',{\n\t\ttemplateUrl: 'app/views/home.html',\n\t\tcontroller: 'homeCtrl'\n\t})\n\t.when('/articles',{\n\t\ttemplateUrl: \"app/views/articles.html\",\n\t\tcontroller: 'articlesCtrl'\n\t})\n\t.when('/article/:articleId',{\n\t\ttemplateUrl: 'app/views/article.html',\n\t\tcontroller: 'articleCtrl'\n\t}).\n\twhen('/register',{\n\t\ttemplateUrl: 'app/views/register.html',\n\t\tcontroller: 'registerCtrl'\n\t})\n    .when('/addarticle',{\n        templateUrl: 'app/views/addarticle.html',\n        controller: 'addArticleCtrl'\n    })\n     .when('/persons',{\n        templateUrl: 'app/views/persons.html',\n        controller: 'personsCtrl'\n    })\n    .when('/addcustomer',{\n        templateUrl: 'app/views/addcustomer.html',\n        controller: \"addCustCtrl\"\n   })\n    .when('/editcustomer/:customerId',{\n        templateUrl: 'app/views/editcustomer.html',\n        controller: \"editCustCtrl\"\n   })\n    .when('/partialupdate',{\n        templateUrl: 'app/views/partialupdate.html',\n        controller: 'partialUpdtCtrl'\n    })\n\t.otherwise({\n\t\tredirectTo:'app/'\n\t});\n}]);","var alertServices = angular.module('alertServices', []);\r\n\r\nalertServices.factory('alertService', ['$rootScope',\r\n    \r\n  function($rootScope){\r\n      var message = \"\";\r\n      var type = \"success\";\r\n    return {\r\n        display: function(m,t) {\r\n            message=m;\r\n            type=t;\r\n            $rootScope.$emit(\"alert-message-event\");\r\n        \r\n        },\r\n        subscribe: function(scope,callback){\r\n            var handler = $rootScope.$on('alert-message-event',callback);\r\n        },\r\n        getMessage: function(){\r\n            return {\r\n                \"text\":message,\r\n                \"type\":type\r\n            }\r\n            \r\n        }\r\n    };\r\n  }]);","/**\n * @author Admin\n */\nblogApp.directive('someBlogArticles',function(){\n\treturn{\n\t\trestrict: 'A',\n\t\ttemplateUrl: 'app/views/directivetmpl/articles.html'\n\t};\n})\n\n\n.directive(\"someBlogFullArticle\",function(){\n\treturn{\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'app/views/directivetmpl/fullarticle.html'\n\t};\n})\n\n\n.directive('emailRequiredValid',function(){\n\treturn{\n\t\tlink: function(scope, element, attrs){\n\t\t\telement.on(\"blur\",function(){\n\t\t\t\tif(scope.regform.email.$error.required){\n\t\t\t\t\talert(\"field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.email.$invalid && !scope.regform.email.$error.required){\n\t\t\t\t\talert(\"invalid email\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t};\n})\n\n.directive('nameRequired',function(){\n\treturn{\n\t\tlink: function(scope, element, attrs){\n\t\t\telement.on(\"blur\",function(){\n\t\t\t\tif(scope.regform.name.$error.required){\n\t\t\t\t\talert(\"field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.$error.minlength){\n\t\t\t\t\talert('You must enter min. 3 characters');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t};\n})\n\n.directive('passRequired',function(){\n\treturn{\n\t\trestrict: 'A',\n\t\tlink: function(scope,element,attrs){\n\t\t\telement.on('blur',function(){\n\t\t\t\tif(scope.regform.password.$error.required){\n\t\t\t\t\talert(\"this field is required\");\n\t\t\t\t}\n\t\t\t\tif(scope.regform.password.$error.minlength){\n\t\t\t\t\talert('You must enter min. 6 characters');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n})\n\n.directive('pwCheck', [function () {\n    return {\n      require: 'ngModel',\n      link: function (scope, elem, attrs) {\n        var firstPassword = '#' + attrs.pwCheck;\n        elem.on('blur', function(){\n        \tif(elem.val()!==$(firstPassword).val()){\n        \t\talert(\"Passwords doesn`t match!\");\n        \t}\n        });\n        \n      }\n    };\n  }]);","var articleServices = angular.module('someBlogServices', ['ngResource']);\r\n\r\narticleServices.factory('articles', ['$resource',\r\n  function($resource){\r\n    return $resource('jsondata/:articleId.json', {}, {\r\n      query: {method:'GET', params:{articleId:'articles'}, isArray:true}\r\n    });\r\n  }]);\r\n  \r\n articleServices.factory(\"LS\",['$window',function($window){\r\n \tinit();\r\n     \r\n     return{\r\n \t\tsetData: function(val,name){\r\n \t\t\t$window.localStorage.setItem(name,JSON.stringify(val));\r\n \t\t},\r\n \t\tgetData: function(name){\r\n \t\t\t return JSON.parse($window.localStorage.getItem(name));\r\n \t\t\t\r\n \t\t},\r\n        clearData: function(name){\r\n            $window.localStorage.removeItem(name);\r\n        }\r\n \t};\r\n     \r\n     function init() {\r\n        if(!$window.localStorage)\r\n                throw new Error('local Storage is not set');\r\n     }\r\n }]);\r\n\r\n articleServices.factory(\"artID\",['$window',function($window){\r\n    return{\r\n        setId: function(){\r\n            return Math.floor((Math.random()*6000)+1);\r\n        }\r\n    }\r\n }]);\r\n\r\n articleServices.factory(\"customerData\",[\"$http\",'LS','$q','$filter','$log',function($http,LS,$q,$filter,$log){\r\n     var baseUrl = 'jsondata/articles1.json';\r\n     var dataLoad = null; \r\n//    LS.clearData(\"cutomers\");\r\n     //schma for validation\r\n     schema = {\r\n                \"type\":\"object\",\r\n                \"properties\":{\r\n                    \"id\":{\"type\":\"number\"},\r\n                    \"name\":{\"type\":\"string\"},\r\n                    \"lastname\":{\"type\":\"string\"},\r\n                    \"hobby\":{\"type\":\"string\"},\r\n                    \"age\":{\"type\":\"string\"}\r\n                }\r\n            };\r\n     \r\n    // throw('test');\r\n     init();\r\n     return{ \r\n//         sort, direction, pageIndex, pageSize, pageIndex, pageSize, sortKey, sortDirection\r\n        getData: function(search,sortKey, sortReverse, pageIndex, pageSize)\r\n        {\r\n            return dataLoad.then(function(data) {\r\n                //total number of pagination\r\n                pages = Math.ceil(data.length / pageSize);\r\n                \r\n                //if isset search && search module\r\n                if(search){\r\n                  function searchArr(search){\r\n                        var results = [];\r\n                        for(var i=0;i<data.length;i++){\r\n                            if(data[i].id==search || \r\n                               data[i].name.toLowerCase()==search.toLowerCase() || \r\n                               data[i].lastname.toLowerCase()==search.toLowerCase() || \r\n                               data[i].hobby.toLowerCase()==search.toLowerCase())\r\n                               results.push(data[i]);\r\n                        }\r\n                      return results;\r\n                    }\r\n                    data = searchArr(search);\r\n                }\r\n                var cout = data.length;\r\n//                if isset sort && sortDirection && sort module\r\n                \r\n                if(sortKey){\r\n                    if(!sortReverse) \r\n                        sortKey=\"-\"+sortKey;\r\n                    else \r\n                        sortKey=\"+\"+sortKey;\r\n                    \r\n                    data = $filter('orderBy')(data,sortKey);\r\n                }\r\n                \r\n                //pagination\r\n                //begin with \r\n                beginWith = ((pageIndex-1) * pageSize);\r\n                data = $filter(\"limitTo\")(data,pageSize,beginWith);\r\n              return {\r\n                 items: data,\r\n                count: cout\r\n              };\r\n                \r\n            }\r\n            //ERROR\r\n                          \r\n                                );\r\n        },\r\n         getCount: function(){\r\n            return dataLoad.then(function(data){\r\n                return data.length;\r\n            })\r\n         },\r\n         removeItem: function(removeId){\r\n                //paramater validation\r\n             return dataLoad.then(function(data){\r\n\r\n                 var f;\r\n                 var found = data.some(function(item, index) { f = index; return item.id == removeId; });\r\n\r\n                 if (!found) {\r\n                     return false;\r\n                 }\r\n\r\n                 data.splice(f, 1);\r\n                 console.log(data);\r\n                 \r\n                     LS.setData(data,\"cutomers\");\r\n                     \r\n                     return true;\r\n             });\r\n         },\r\n         \r\n         \r\n         \r\n         addCustomer: function(newCustomer){\r\n             var valid = tv4.validateMultiple(newCustomer, schema);\r\n                if(!valid.valid){\r\n                   return $q.reject(valid.errors[0]);\r\n                }else{\r\n                    return dataLoad.then(function(data){\r\n                     //validation\r\n                        data.lastId = 0;\r\n                        id=0;\r\n                        angular.forEach(data,function(value,key){\r\n                            if(value.id >id) id=value.id;\r\n\r\n                        });\r\n                        id=id+1;\r\n                        newCustomer.id=id;\r\n                        data.push(newCustomer);\r\n                        LS.setData(data,\"cutomers\");\r\n                        return angular.copy(newCustomer);   // should return new customer - > id outside\r\n            })};\r\n         },\r\n         \r\n         getAll: function(){\r\n            return dataLoad.then(function(data){\r\n                return angular.copy(data);\r\n            })\r\n         },\r\n         \r\n         updateCustomer: function(customer){\r\n             var valid = tv4.validateMultiple(customer, schema);\r\n                if(!valid.valid){\r\n                    //console.log(valid);\r\n                    return $q.reject(valid.errors[0]);\r\n                }\r\n            return dataLoad.then(function(data){\r\n                    arr = [];\r\n                    angular.forEach(data,function(value, key){\r\n                        if(value.id!=customer.id) arr.push(value);\r\n                    })\r\n                    arr.push(customer);\r\n                    data=arr;\r\n                    LS.setData(data,\"cutomers\");\r\n                    dataLoad= $q.resolve(data);\r\n                    return angular.copy(arr);\r\n                \r\n            })\r\n         },\r\n         \r\n          getCustomer: function(customerId){\r\n            return dataLoad.then(function(data){\r\n                customer={};\r\n                customer=findItemById(data,customerId);\r\n                return angular.copy(customer);\r\n            })\r\n         },\r\n         \r\n         customerPatch: function(c){\r\n             // console.log(valid);\r\n             var valid = tv4.validateMultiple(c, schema);\r\n                if(!valid.valid){\r\n                    //console.log(valid);\r\n                    return $q.reject(valid.errors[0]);\r\n                }\r\n             \r\n            return dataLoad.then(function(data){\r\n                    angular.merge(findItemById(data,c.id),c);\r\n                    LS.setData(data,\"cutomers\");\r\n                   return c;\r\n                \r\n            });\r\n         }\r\n         \r\n        \r\n}\r\n     function findItemById(data,id){\r\n        for(var i=0;i<data.length;i++){\r\n            if(data[i].id==id)\r\n                break;\r\n        }\r\n         return data[i];\r\n     }\r\n     \r\n     function init(){\r\n         customers = LS.getData(\"cutomers\");\r\n         if(customers){\r\n            dataLoad = $q.resolve(customers);\r\n         }\r\n         else\r\n             dataLoad = $http.get(baseUrl).then(function(response){\r\n                LS.setData(response.data,\"cutomers\");\r\n                return response.data;\r\n            }).catch(function(e) { throw { status: e.staus, message: e.statusText }});\r\n            dataLoad.catch(onError);\r\n         return dataLoad;\r\n     }\r\n     \r\n     function onError(error){\r\n        $log.error(error);\r\n         $log.error({ status: error.status, message: error.message, source: 'customerData'});\r\n     }\r\n     \r\n }]);","blogApp.controller('addArticleCtrl',['$scope','$http','articles','LS','artID',function($scope,$http,articles,LS,artID){\r\n//    empty new article obj\r\n\t$scope.article={\r\n        id:\"\",\r\n        img:\"\",\r\n        title:\"\",\r\n        short_desc:\"\",\r\n        desc:\"\"\r\n    };\r\n    \r\n    \r\n    $scope.addArticle=function(article){\r\n//        getting all existing articles\r\n        $scope.articles=LS.getData();\r\n        console.log(\"old articles\"+$scope.articles);\r\n        \r\n        //getting id for new article\r\n        $scope.id=artID.setId();\r\n        if($scope.articles.id=$scope.id){\r\n            $scope.id=artID.setId();\r\n        }\r\n//      setting id and img to new article obj\r\n        $scope.article.id=$scope.id;\r\n        $scope.article.img=\"3.jpg\";\r\n//        pushing new article to the rest of article\r\n        $scope.articles=$scope.articles.push(article);\r\n        console.log(\"new articles\"+$scope.articles);\r\n        console.log($scope.article);\r\n        \r\n        LS.setData($scope.articles);\r\n    }\r\n}]);","blogApp.controller(\"addCustCtrl\",['$scope','$log','LS','$window','customerData','alertService',function($scope,$log,LS,$window,customerData,alertService){\r\n     $scope.cust={id: 0,name: \"\",lastname: \"\",hobby: \"\",age: \"\"};\r\n      \r\n    \r\n    \r\n    $scope.addCust=function(newCust){\r\n     customerData.addCustomer(newCust).then(function(data){\r\n            $scope.cust=data;\r\n            $window.location =\"#/persons\";\r\n            alertService.display(\"Customer successefuly added!\",\"success\");\r\n     },\r\n    function(error){\r\n        alertService.display(error.message,\"danger\");\r\n     });\r\n     \r\n    }\r\n    \r\n    $scope.redirect=function(){\r\n         $window.location =\"#/persons\";\r\n    }\r\n}]);","blogApp.controller('alertCtrl',['$scope','$timeout','alertService',function($scope,$timeout,alertService){\r\n    $scope.message=\"\";\r\n    $scope.type=\"success\";\r\n    init();\r\n    \r\n    \r\n   \r\n    \r\n    function init(){\r\n        alertService.subscribe($scope, function (){\r\n            var m = alertService.getMessage();\r\n            showMessage(m.text,m.type);\r\n        });\r\n    \r\n    }\r\n    \r\n    function showMessage(m,t) {\r\n        $scope.messageShow=true;\r\n        $scope.message=m;\r\n        $scope.type=t;\r\n        $timeout(function(){\r\n            $scope.messageShow=false;\r\n        },3000);\r\n    }\r\n}]);","blogApp.controller('articleCtrl',['$scope','$http','$routeParams','articles',function($scope,$http,$routeParams,articles){\r\n\t$scope.article = articles.get({articleId: $routeParams.articleId});\r\n}]);","blogApp.controller('articlesCtrl',['$scope','$window','$http','articles','LS',function($scope,$window,$http,articles,LS){\r\n//\t$window.alert(\"14\");\r\n//\t $scope.articles=articles.query();\r\n//\t $http.get(\"jsondata/articles.json\").success(function(data){\r\n//\t\t console.log(JSON.stringify(data));\r\n//\t\t LS.setData(data,'articles-storage');\r\n//\t\t $scope.articles=data;\r\n//\t });\r\n//\t\r\n\t// article order\r\n\t $scope.orderArticle='-id';\r\n\t \r\n\t // gettind articles\r\n\t  $scope.articles=LS.getData('articles-storage');\r\n\t  console.log($scope.articles);\r\n\t  \r\n\t  //pagination\r\n//\t$window.alert($scope.articles.id);\r\n   $scope.removeArticle = function(id){\r\n       for( i=$scope.articles.length-1; i>=0; i--) {\r\n            if( $scope.articles[i].id == id) $scope.articles.splice(i,1);\r\n           LS.setData($scope.articles);\r\n       }\r\n   }\r\n\t  \r\n}]);\r\n","blogApp.controller(\"editCustCtrl\",['$scope','$window','$routeParams','$log','$location','customerData','alertService',function($scope,$window,$routeParams,$log,$location,customerData,alertService){\r\n    $scope.customerId=$routeParams.customerId;\r\n    $scope.customer = {};\r\n    init();\r\n    \r\n    \r\n    \r\n    function init(){\r\n        customerData.getCustomer($scope.customerId).then(function(data){\r\n            \r\n            //data.age= 56;\r\n            $scope.customer=data;\r\n            \r\n        });\r\n        \r\n    }\r\n    \r\n    $scope.updateCustomer=function(customer){\r\n        customerData.updateCustomer(customer).then(function(data){\r\n            $location.path(\"/persons\");\r\n            alertService.display(\"Customer successefuly updated!\",\"success\");\r\n        },\r\n        function(error){\r\n            alertService.display(error.message,\"danger\");\r\n        });\r\n    }\r\n    \r\n    //    removing data\r\n   $scope.removeData=function(index){\r\n       if(confirm(\"Sure to DELETE?\")){\r\n            customerData.removeItem(index).then(function(data){\r\n                $location.path(\"/persons\");\r\n            });\r\n            \r\n       }\r\n   }\r\n   \r\n   $scope.redirect=function(toUrl,id){\r\n       if(confirm(\"sure cancel editing?\"))\r\n        $location.path(\"/persons\");\r\n   }\r\n   \r\n}]);","blogApp.controller('homeCtrl',['$scope','$http','articles',function($scope,$http,articles){\r\n\t$scope.articles=articles.query();\r\n}]);","\r\nblogApp.controller('partialUpdtCtrl',['$scope','customerData',function($scope, customerData){\r\n     function getAll(){\r\n        \r\n     }\r\n}]);","////testing merge\r\n//var gigi = {\"id\":1,\"name\":\"Gigi\", \"lastname\":\"DS\", \"hobby\":\"football\", \"age\":\"1987/06/04\"};\r\n//var gigel = {\"id\":1,\"name\":\"Gigel\", \"lastname\":\"DS-MD\", \"hobby\":\"football\", \"age\":\"1987/06/04\"};\r\n//\r\n////var gigle = {\r\n////    id:1,\r\n////    fname:\"gigel\",\r\n////    lname:\"DS-Moldova\",\r\n////    hobby:\"football\",\r\n////    age:\"1987/06/04\r\n////};\r\n//\r\n//console.log(angular.merge({},gigi,gigel));\r\n//\r\n////practice with functiuonal programming\r\n//function test1() {\r\n//    var i = 4;\r\n//   // alert(\"first: \"+i);\r\n//    f = function () {\r\n//        i = i + 1;\r\n//       // alert(\"second: \"+i);\r\n//        return i;\r\n//    }\r\n//    return {\r\n//        exec: f\r\n//    };\r\n//}\r\n//\r\n//\r\n//var fac = test1;\r\n//\r\n//f1 = fac();\r\n//f2 = fac();\r\n//f3 = fac();\r\n//\r\n//\r\n//console.log('f1.1:' + f1.exec());\r\n//console.log('f2.1:' + f2.exec());\r\n//console.log('f3.3:' + f3.exec());\r\n//console.log('f1.2:' + f1.exec());\r\n//console.log('f1.3:' + f1.exec());\r\n//console.log('f3.2:' + f3.exec());\r\n//console.log('f2.2:' + f2.exec());\r\n//\r\n//\r\n//var say = function(name, message){\r\n//    console.log(name+\" say \"+message);\r\n//}\r\n//\r\n//say(\"Gigi\", \"morning\");\r\n//\r\n//say(\"Gigi\",\"morning\",\"third param no to display\");\r\n//\r\n//say(\"gigi\");\r\n//\r\n//\r\n//sayV2=function(name, message){\r\n//    console.log(name+\" say \"+(message || \"nothing at all\"));\r\n//}\r\n//\r\n//sayV2(\"gigi\");\r\n//\r\n////always return something\r\n//sayfunctional=function(name, message){\r\n//    return name+\" say \"+(message || 'nothing at all yo');\r\n//}\r\n//\r\n//console.log(sayfunctional(\"Gigi\"));\r\n//\r\n////finish practice with functional programming\r\n//  var Validate = require('validate-arguments');\r\n//  console.log(Validate);\r\nblogApp.controller('personsCtrl',['$scope','$routeParams','$window','customerData','$log','$location','$filter','$http','alertService',function($scope,$routeParams,$window,customerData,$log,$location,$filter,$http,alertService){\r\n    //setting empty array for records\r\n\t$scope.persons=[];\r\n    $scope.search = \"\";\r\n    $scope.sortKey = \"id\";\r\n    $scope.reverse = true;\r\n    $scope.pageIndex = 1;\r\n    $scope.pageSize = 5;\r\n    $scope.maxPageRightLeft=2;\r\n    $scope.totalPages = 0;\r\n    $scope.removeId=false;\r\n    $scope.refresh=refresh;\r\n    $scope.quickEdit=false;\r\n  init();\r\n    \r\n    \r\n    \r\n    function init(){\r\n        refresh();\r\n    }\r\n    \r\n    $scope.reloadPage=function(){\r\n        $window.location.reload();\r\n    }\r\n    \r\n    function refresh(){\r\n        customerData.getData($scope.search,$scope.sortKey,$scope.reverse,$scope.pageIndex, $scope.pageSize).then(function(data){\r\n            //console.log(data.status);\r\n            \r\n           //for loop persons convertModelToVM function\r\n            items = data.items;\r\n            for(i=0;i<items.length ; i++)\r\n                items[i] = convertModelToVM(items[i]);\r\n            \r\n            \r\n            $scope.persons = data.items;\r\n            $scope.totalPages = Math.ceil(data.count / $scope.pageSize);\r\n            $scope.totalPagesArr = numToArr($scope.totalPages);\r\n        }).catch(function(e){\r\n            $window.alert(e.message);\r\n        });\r\n    }\r\n      function convertModelToVM(model){\r\n          var arr={};\r\n          var birthday = new Date(model.age);\r\n          arr.birthday = angular.copy(model.age);\r\n          \r\n         var today = new Date($filter('date')(new Date,'yyyy/MM/dd'));\r\n          var age = today - birthday;\r\n          \r\n          var minutes = 1000*60;\r\n          var hours = minutes*60;\r\n          var days = hours*24;\r\n          var years = days*365;\r\n          \r\n          arr.birthday = Math.round(age/years);\r\n          \r\n          \r\n        return angular.merge({},model,arr);\r\n      }\r\n    \r\n    //sort\r\n    $scope.sort=function(keyName){\r\n        if($scope.sortKey!=keyName){\r\n            $scope.sortKey = keyName;\r\n            $scope.reverse = false;\r\n        }else{\r\n             $scope.reverse = !$scope.reverse;\r\n        }\r\n        refresh();\r\n    }\r\n    \r\n    //pagination\r\n    $scope.setPage=function(index){\r\n        $scope.pageIndex = index;\r\n        refresh();\r\n    }\r\n   \r\n    //show customer\r\n    $scope.showCustomer=function(id){\r\n        $scope.quickEdit = true;\r\n        var customer = {};\r\n        for(var i=0; i<$scope.persons.length;i++){\r\n            if($scope.persons[i].id==id){\r\n                customer=angular.copy($scope.persons[i]);\r\n                break;\r\n            }\r\n        }\r\n        return $scope.customer=customer;\r\n    }\r\n    \r\n    $scope.close = function(){\r\n       $scope.customer={};\r\n        $scope.quickEdit = false;\r\n   }\r\n    \r\n    $scope.quickSave=function(c){\r\n        customerData.customerPatch(c).then(function(data){\r\n            //console.log(data);\r\n                $scope.quickEdit = false;\r\n                $scope.customer={};\r\n                refresh();\r\n                alertService.display(\"Edited successfully updated!\",\"success\");\r\n            \r\n        }, function(error){\r\n//            console.log(error.message);\r\n            alertService.display(error.message,\"danger\");\r\n        });\r\n    }\r\n    \r\n   $scope.redirect=function(toUrl,personId){\r\n       $window.location =toUrl+personId;\r\n   }\r\n   \r\n   \r\n   //x page left and rigth to the current page\r\n  function xPagesLeftRight(Arr){\r\n      //checking if not empty maxPageRightLeft\r\n      if($scope.maxPageRightLeft == null) $scope.maxPageRightLeft = 2;\r\n       var arr=[];\r\n      //setting left pages\r\n        for(i=1;i<=$scope.maxPageRightLeft;i++){\r\n            var left = $scope.pageIndex - i;\r\n            var right = $scope.pageIndex + i;\r\n            if(left>0){\r\n                arr.push(left);\r\n            }\r\n            if(right<=$scope.totalPages)\r\n            arr.push(right);\r\n        }\r\n      \r\n      //setting current page\r\n      arr.push($scope.pageIndex);\r\n      return arr.sort();\r\n   }\r\n   \r\n   \r\n    //from number to array\r\n     function numToArr(n){\r\n        var arr = [];\r\n        for(i =1; i <= n; i++){\r\n            \r\n            arr.push(i);\r\n        }\r\n         xPagesLeftRight(arr);\r\n         return xPagesLeftRight(arr);\r\n    }\r\n    $log.error();\r\n    \r\n\r\n}]); ","blogApp.controller('registerCtrl',['$scope','$http',function($scope,$http){\r\n\t$scope.user={};\r\n}]);"],"sourceRoot":"/source/"}